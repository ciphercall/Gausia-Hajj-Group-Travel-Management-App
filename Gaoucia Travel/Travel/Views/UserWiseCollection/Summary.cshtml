@using System.Data
@using System.Data.SqlClient
@using Travel.DataAccess
@using Travel.Models
@using Travel.DataAccess
@model Travel.Models.DTO.OpdReceiveDTO

@{
    Layout = null;
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);


    string companyName = "", address = "", contactNo = "";
    TravelDbContext db = new TravelDbContext();
    var SelectCompanyName = from n in db.AslCompanyDbSet

                            where n.COMPID == compid
                            select new { n.COMPNM, n.ADDRESS, n.CONTACTNO };

    foreach (var n in SelectCompanyName)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;






    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    var fromdate = Model.FromDate;
    var todate = Model.ToDate;

}


<!DOCTYPE html>

<html lang="en">
<head>
    <link href="~/Content/reportcss/style.css" rel="stylesheet" />



</head>
<body style=" background-color:#fafafa;">


    <div style="width: 960px; margin: 0px auto; border: 1px solid #d3d3d3; border-radius: 5px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); background: none repeat scroll 0 0 white;">
        <table id="mainTable" border="0" width="100%">
            <thead>
                <tr>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="10%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>

                </tr>
                <tr style="background-color: #00689b">
                    <td colspan="12">
                        <h3 style="color: white;padding:4px">@compNm</h3>
                        <p style="color:white;padding-left:4px">@Address<span>  @contactno</span></p>
                    </td>

                    <td colspan="6" style="color: white;padding:8px" align="right">
                        Powered By<br />Alchemy Software
                    </td>

                </tr>

                <tr>
                    <td colspan="12" align="left" style="padding: 4px; font-weight: bold">User Wise Collection-Summary</td>
                    <td align="right" colspan="6" style="padding:8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
                </tr>
                @{
                    string d = Convert.ToString(fromdate);
                    DateTime fdate = DateTime.Parse(d);
                    string ffdt = fdate.ToString("dd-MMM-yyyy");


                    string d2 = Convert.ToString(todate);
                    DateTime fdate2 = DateTime.Parse(d2);
                    string ffdt2 = fdate2.ToString("dd-MMM-yyyy");
                }
                <tr>
                    <td colspan="6" align="left" style="padding: 4px; font-weight: bold">From: <span>@ffdt</span></td>
                    <td align="left" colspan="6" style="padding:8px; font-weight: bold">To: <span>@ffdt2</span></td>
                </tr>
                <tr style="background-color: #00689b; outline: thin solid">
                    <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">User</td>
                    <td colspan="4" style="color: white; padding: 4px; font-size: small" align="center">Collection(Bill)</td>
                    <td colspan="4" style="color: white; padding: 4px; font-size: small" align="center">Collection(Due)</td>
                    <td colspan="4" style="color: white; padding: 4px; font-size: small" align="center">Total</td>


                </tr>
            </thead>

            <tbody>



                @{
                    var TransdtGroup = (from n in db.HMS_OPDMST where n.COMPID == compid && n.TRANSDT >= fromdate && n.TRANSDT <= todate select new { n.TRANSDT }).OrderBy(x => x.TRANSDT).Distinct().ToList();

                    System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());
                    string query = string.Format(
                        "SELECT TRANSDT, USERNM, SUM(ISNULL(RCVAMTB,0)) RCVAMTB, SUM(ISNULL(RCVAMTD,0)) RCVAMTD, (SUM(ISNULL(RCVAMTB,0))+SUM(ISNULL(RCVAMTD,0))) RCVAMTT " +
                        "FROM( " +
                        "SELECT TRANSDT, USERNM, SUM(ISNULL(RCVAMT,0)) RCVAMTB, 0 RCVAMTD " +
                        "FROM HMS_OPDMST INNER JOIN ASLUSERCOES ON HMS_OPDMST.COMPID = ASLUSERCOES.COMPID AND HMS_OPDMST.INSUSERID = ASLUSERCOES.USERID " +
                      "WHERE HMS_OPDMST.COMPID = '{0}' AND TRANSDT BETWEEN '{1}' AND '{2}' " +
                      "GROUP BY TRANSDT, USERNM "+
                        "UNION " +
                        "SELECT TRANSDT, USERNM, 0 RCVAMTB, SUM(ISNULL(RCVAMT,0)) RCVAMTD " +
                        "FROM HMS_OPDRCV INNER JOIN ASLUSERCOES ON HMS_OPDRCV.COMPID = ASLUSERCOES.COMPID AND HMS_OPDRCV.INSUSERID = ASLUSERCOES.USERID " +
                        "WHERE HMS_OPDRCV.COMPID = '{0}' AND TRANSDT BETWEEN '{1}' AND '{2}' " +
                        "GROUP BY TRANSDT, USERNM "+
                        ") A GROUP BY TRANSDT, USERNM ",
                        compid, fromdate, todate);
                    System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
                    conn.Open();
                    SqlDataAdapter da = new SqlDataAdapter(cmd);
                    DataTable ds = new DataTable();
                    da.Fill(ds);

                    string username = "";
                    Decimal billCollection = 0, subTotalB = 0, subTotalD = 0, subTotalT = 0, grandTotalB = 0, grandTotalD = 0, dueCollection = 0, total = 0, grandTotalT = 0;
                    string transdt = "";
                    Int64 testid = 0, age = 0;
                    Int64 dateprint_hoachekina = 0;

                    foreach (var groupDate in TransdtGroup)
                    {
                        dateprint_hoachekina = 0;
                        subTotalB = 0;
                        subTotalD = 0;
                        subTotalT = 0;
                        foreach (DataRow row in ds.Rows)
                        {
                            transdt = row["TRANSDT"].ToString();
                            DateTime tdate = DateTime.Parse(transdt);
                            if (groupDate.TRANSDT == tdate)
                            {
                                if (dateprint_hoachekina == 0)
                                {
                                    string transdt_convertDate = tdate.ToString("dd-MMM-yyyy");
                                    <tr style="outline:thin solid">
                                        <td colspan="18" style="font-weight: bold">Date : @transdt_convertDate </td>
                                    </tr>

                                    dateprint_hoachekina = 1;
                                }


                                username = row["USERNM"].ToString();



                                billCollection = Convert.ToDecimal(row["RCVAMTB"]);
                                dueCollection = Convert.ToDecimal(row["RCVAMTD"]);
                                total = Convert.ToDecimal(row["RCVAMTT"]);
                                <tr style="outline:thin solid">
                                    <td align="center" colspan="6">
                                        @username
                                    </td>
                                    <td align="right" colspan="4">
                                        @billCollection
                                    </td>
                                    <td colspan="4" align="right">
                                        @dueCollection
                                    </td>
                                    <td colspan="4" align="right">
                                        @total
                                    </td>


                                </tr>
                                subTotalB = subTotalB + billCollection;
                                subTotalD = subTotalD + dueCollection;
                                subTotalT = subTotalT + total;
                            }






                        }
                        <tr>
                            <td colspan="6" align="right" style="font-weight: bold">Date Wise Total :</td>
                            @if (subTotalB < 0)
                            {
                                decimal rr = subTotalB * (-1);
                                string convertamount = Convert.ToString(rr);
                                string SubTotalB = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalB</td>
                            }
                            else
                            {
                                string convertamount = Convert.ToString(subTotalB);
                                string SubTotalB = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalB</td>
                            }
                            @if (subTotalD < 0)
                            {
                                decimal rr = subTotalD * (-1);
                                string convertamount = Convert.ToString(rr);
                                string SubTotalD = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalD</td>
                            }
                            else
                            {
                                string convertamount = Convert.ToString(subTotalD);
                                string SubTotalD = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalD</td>
                            }
                            @*<td colspan="4" align="right" style="font-weight: bold">@subTotalD</td>*@
                            @if (subTotalT < 0)
                            {
                                decimal rr = subTotalT * (-1);
                                string convertamount = Convert.ToString(rr);
                                string SubTotalT = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalT</td>
                            }
                            else
                            {
                                string convertamount = Convert.ToString(subTotalT);
                                string SubTotalT = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="4" align="right" style="font-weight: bold">@SubTotalT</td>
                            }
                            @*<td colspan="4" align="right" style="font-weight: bold">@subTotalT</td>*@
                        </tr>

                            grandTotalB = grandTotalB + subTotalB;

                            grandTotalD = grandTotalD + subTotalD;
                            grandTotalT = grandTotalT + subTotalT;

                    }
                    <tr style="outline: thin solid">
                        <td colspan="6" align="right" style="font-weight: bold">Grand Total :</td>
                        @if (grandTotalB < 0)
                        {
                            decimal rr = grandTotalB * (-1);
                            string convertamount = Convert.ToString(rr);
                            string GrandTotalB = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalB</td>
                        }
                        else
                        {
                            string convertamount = Convert.ToString(grandTotalB);
                            string GrandTotalB = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalB</td>
                        }
                        @if (grandTotalD < 0)
                        {
                            decimal rr = grandTotalD * (-1);
                            string convertamount = Convert.ToString(rr);
                            string GrandTotalD = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalD</td>
                        }
                        else
                        {
                            string convertamount = Convert.ToString(grandTotalD);
                            string GrandTotalD = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalD</td>
                        }
                        @if (grandTotalT < 0)
                        {
                            decimal rr = grandTotalT * (-1);
                            string convertamount = Convert.ToString(rr);
                            string GrandTotalT = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalT</td>
                        }
                        else
                        {
                            string convertamount = Convert.ToString(grandTotalT);
                            string GrandTotalT = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="4" align="right" style="font-weight: bold">@GrandTotalT</td>
                        }
                        @*<td colspan="4" align="right" style="font-weight: bold">@grandTotalB</td>
                        <td colspan="4" align="right" style="font-weight: bold">@grandTotalD</td>
                        <td colspan="4" align="right" style="font-weight: bold">@grandTotalT</td>*@
                    </tr>


                    conn.Close();
                }






            </tbody>
        </table>


    </div>


</body>
</html>
