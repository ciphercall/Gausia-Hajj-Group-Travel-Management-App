@using Travel.Models

@model Travel.Models.DTO.RPDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    TravelDbContext db = new TravelDbContext();




    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    string date = currentDateTime.ToString("yyyy-MM-dd");
    string year = date.Substring(0, 4);

    Int64 userid = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"]);


    List<SelectListItem> listcostcnm = new List<SelectListItem>();
    var cc = (from n in db.GLCostPMSTDbSet where n.COMPID == compid select new { n.COSTCNM, n.COSTCID }).ToList();
    foreach (var x in cc)
    {
        listcostcnm.Add(new SelectListItem { Text = x.COSTCNM, Value = Convert.ToString(x.COSTCID) });
    }

    List<SelectListItem> listp = new List<SelectListItem>();
    var costpname = (from n in db.GlCostPoolDbSet where n.COMPID == compid select new { n.COSTCID, n.COSTPID, n.COSTPNM }).ToList();
    foreach (var x in costpname)
    {
        if (x.COSTCID.ToString().Substring(5, 1) == "1")
        {
            listp.Add(new SelectListItem { Text = x.COSTPNM, Value = Convert.ToString(x.COSTPID) });
        }
    }

    List<SelectListItem> transfor = new List<SelectListItem>();
    transfor.Add(new SelectListItem { Text = "RECEIVABLE", Value = "RECEIVABLE" });

    transfor.Add(new SelectListItem { Text = "PAYABLE", Value = "PAYABLE" });


    //List<SelectListItem> ticket = new List<SelectListItem>();
    //var find_ticket = (from n in db.RPDRCRDbSet where n.COMPID == compid && n.TRANSFOR == "PAYABLE" select n).Distinct().ToList();
    //foreach (var TravelRpdrcr in find_ticket)
    //{
    //    if (TravelRpdrcr.TICKETNO != null)
    //    {
    //        ticket.Add(new SelectListItem { Text = TravelRpdrcr.TICKETNO, Value = TravelRpdrcr.TICKETNO });
    //    }

    //}

}

<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />




<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>




@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Receivable/Payable Information - Multiple</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Create", "RPMultiple")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                    <a href="@Url.Action("Update", "RPMultiple")"><i class="fa fa-edit"></i> Update</a>
                </li>
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>
    <div class="col-md-12">
        <div class="form-group">
            @*@Html.HiddenFor(model=>model.CompanyID, new { id = "txtcompid", style = "width:3em;", @Value = compid })*@

            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })

            <div ng-app="MultipleRP" data-ng-controller="ApiMultipleRPController">

                <div class="row">
                    @Html.HiddenFor(model => model.CompanyId, new { id = "txtcompid", style = "width:3em;", @Value = compid })

                    <div class="col-md-3">
                        <label>Transaction Date</label>
                        <span>
                            @Html.TextBoxFor(model => model.TransactionDate, htmlAttributes: new { id = "TransactionDate", @class = "form-control" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label> Month</label>
                        <span>
                            @Html.TextBoxFor(model => model.Transmonthyear, htmlAttributes: new { id = "Transmonthyear", @class = "form-control", @readonly = "readonly", tabIndex = "-1" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>Serial No</label>
                        <span>
                            @Html.TextBoxFor(model => model.TransactionNo, htmlAttributes: new { id = "TransactionNo", @class = "form-control", @readonly = "readonly", tabIndex = "-1" })
                        </span>
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-3">
                        <label>Card Type</label>
                        <span>
                            @Html.DropDownListFor(model => model.Cardcid, listcostcnm, htmlAttributes: new { id = "Cardcid", @class = "form-control" })


                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>Effect Head</label>
                        <span>
                            @Html.DropDownListFor(model => model.Cardpid, listp, htmlAttributes: new { id = "Cardpid", @class = "form-control" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>R/P Type</label>
                        <span>
                            @Html.DropDownListFor(model => model.TransactionFor, transfor, htmlAttributes: new { id = "TransactionFor", @class = "form-control" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        @*<input style="margin-top: 22px" type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" id="submit" />*@
                    </div>
                    @*<div class="col-md-2">
                            <input style="margin-top: 22px" type="submit" value="Print" name="command" class="btn btn-primary" formtarget="_target" id="printButtonId" />
                        </div>*@
                    @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                    <input id="lat" type="hidden" />
                    <input id="lon" type="hidden" />



                </div>

                <br />
                <table class="table table-bordered table-hover">
                    <tr>

                        <td width="10%"><label>Card No</label></td>

                        <td width="10%"><label> Passenger</label></td>




                        <td width="10%" id="lableaccountnm">@Html.LabelFor(model => model.Accountnm, htmlAttributes: new { @class = "control-label" })</td>

                        <td width="10%" id="receivablediv1"><label>Ticket No</label></td>
                        <td width="10%" id="receivablediv2"><label>Ticket Date</label></td>
                        <td width="10%" id="payablediv1"><label>Ticket No</label></td>
                        <td width="10%" id="payablediv2"><label>Ticket Date</label></td>
                        <td width="10%"><label>Amount</label></td>

                        <td width="10%"><label>Cash Amount</label></td>
                        <td width="10%"><label>Credit Amount</label></td>

                        <td width="10%"><label>Remarks</label></td>
                        <td width="8%"></td>
                    </tr>
                    <tr>

                        <td width="10%"> @Html.TextBoxFor(model => model.Cardno, htmlAttributes: new { id = "Cardno", @class = "form-control input-sm", data_ng_model = "newChild.Cardno", @required = "required" })</td>

                        <td width="10%">@Html.TextBoxFor(model => model.passenger, htmlAttributes: new { id = "passenger", @class = "form-control input-sm", data_ng_model = "newChild.passenger", @readonly = "readonly", tabIndex = "-1" })</td>

                        <td width="10%">@Html.DropDownListFor(model => model.Accountcd, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { data_ng_model = "newChild.Accountcd", @class = "form-control input-sm", id = "Accountcd" })</td>
                        <td width="10%" id="receivablediv3">@Html.DropDownListFor(model => model.Ticketno, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { data_ng_model = "newChild.Ticketno", id = "Ticketno", @class = "form-control input-sm" })</td>

                        <td width="10%" id="receivablediv4">@Html.TextBoxFor(model => model.TicketDate, htmlAttributes: new { data_ng_model = "newChild.TicketDate", id = "TicketDate", @class = "form-control input-sm", tabIndex = "-1" })</td>

                        <td width="10%" id="payablediv3">@Html.TextBoxFor(model => model.Ticketno, htmlAttributes: new { data_ng_model = "newChild.Ticketno", id = "Ticketno2", @class = "form-control input-sm" })</td>

                        <td width="10%" id="payablediv4">@Html.TextBoxFor(model => model.TicketDate, htmlAttributes: new { data_ng_model = "newChild.TicketDate", id = "TicketDate2", @class = "form-control input-sm" })</td>

                        <td width="10%">@Html.TextBoxFor(model => model.Amount, htmlAttributes: new { data_ng_model = "newChild.Amount", id = "Amount", @class = "form-control input-sm", required = "required" })</td>
                        <td width="10%">@Html.TextBoxFor(model => model.Cashamount, htmlAttributes: new { data_ng_model = "newChild.Cashamount", id = "Cashamount", @class = "form-control input-sm", required = "required" })</td>
                        <td width="10%" id="cheque1">@Html.TextBoxFor(model => model.Creditamount, htmlAttributes: new { data_ng_model = "newChild.Creditamount", id = "Creditamount", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })</td>
                        <td width="10%" id="cheque2">@Html.TextBoxFor(model => model.Remarks, htmlAttributes: new { data_ng_model = "newChild.Remarks", id = "Remarks", @class = "form-control input-sm" })</td>

                        <td width="8%"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>
                    </tr>

                    <tr data-ng-repeat="item in rpData">
                        <td hidden><strong data-ng-hide="item.editMode">{{item.Id}}</strong></td>
                      
                        <td hidden><strong data-ng-hide="item.editMode">{{item.CompanyId}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransactionDate}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.Transmonthyear}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransactionNo}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.Cardcid}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.Cardpid}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransactionFor}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransactionSerial}}</strong></td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.Cardno }}</p>
                            @Html.TextBoxFor(model => model.Cardno, new { data_ng_show = "item.editMode", data_ng_model = "item.Cardno", @class = "form-control input-sm gridCardno", ng_change = "x(item.Cardno)" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.passenger }}</p>
                            @Html.TextBoxFor(model => model.passenger, new { data_ng_show = "item.editMode", data_ng_model = "item.passenger", @class = "form-control input-sm", id = "gridPassenger", @readonly = "readonly", tabIndex = "-1" })

                        </td>

                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.Accountnm }}</p>
                            @Html.DropDownListFor(model => model.Accountcd, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.Accountcd", @class = "form-control input-sm", id = "gridAccountcd" })

                        </td>
                        <td width="10%" id="receivablediv5">
                            <p data-ng-hide="item.editMode">{{ item.Ticketno }}</p>
                            @Html.DropDownListFor(model => model.Ticketno, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.Ticketno", @class = "form-control input-sm", id = "gridTicket" })

                        </td>

                        <td width="10%" id="receivablediv6">
                            <p data-ng-hide="item.editMode">{{ item.TicketDate }}</p>
                            @Html.TextBoxFor(model => model.TicketDate, new { data_ng_show = "item.editMode", data_ng_model = "item.TicketDate", @class = "form-control input-sm", id = "gridTicketDate",tabIndex="-1" })

                        </td>
                        <td width="10%" id="payablediv5">
                            <p data-ng-hide="item.editMode">{{ item.Ticketno }}</p>
                            @Html.TextBoxFor(model => model.Ticketno, new {id="gridTicketno2", data_ng_show = "item.editMode", data_ng_model = "item.Ticketno", @class = "form-control input-sm" })

                        </td>

                        <td width="10%" id="payablediv6">
                            <p data-ng-hide="item.editMode">{{ item.TicketDate }}</p>
                            @Html.TextBoxFor(model => model.TicketDate, new { id="gridTicketDate2",data_ng_show = "item.editMode", data_ng_model = "item.TicketDate", @class = "form-control input-sm" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode" style="text-align:right">{{ item.Amount }}</p>
                            @Html.TextBoxFor(model => model.Amount, new { data_ng_show = "item.editMode", data_ng_model = "item.Amount", @class = "form-control input-sm gridAmount", required = "required" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode" style="text-align:right">{{ item.Cashamount }}</p>
                            @Html.TextBoxFor(model => model.Cashamount, new { data_ng_show = "item.editMode", data_ng_model = "item.Cashamount", @class = "form-control input-sm gridCashamount", required = "required" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode" style="text-align:right">{{ item.Creditamount }}</p>
                            @Html.TextBoxFor(model => model.Creditamount, new { data_ng_show = "item.editMode", data_ng_model = "item.Creditamount", @class = "form-control input-sm gridCreditamount", @readonly = "readonly", tabIndex = "-1" })

                        </td>

                      
                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.Remarks }}</p>
                            @Html.TextBoxFor(model => model.Remarks, new { data_ng_show = "item.editMode", data_ng_model = "item.Remarks", @class = "form-control input-sm" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a></p>
                            <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a></p>

                        </td>


                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        @*<td></td>*@
                        @*<td></td>
                        <td></td>
                        <td></td>*@
                        <td><b>Total :</b></td>

                        <td><p id="gridTotalamount">{{GetSummOfAmount(rpData)}}</p></td>
                        <td><p id="gridTotalcash">{{GetSummOfcash(rpData)}}</p></td>
                        <td><p id="gridTotalcredit">{{GetSummOfcredit(rpData)}}</p></td>
                        <td></td>

                    </tr>
                </table>
            </div>



        </div>
    </div>


    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">
        $(document).ready(function () {




            //$('#CHEQUENO').attr("disabled", "disabled");
            //$('#CHEQUEDT').attr("disabled", "disabled");

            $('#lableaccountnm').text('Receivable Head');

            $("#payablediv1").hide();
            $("#payablediv2").hide();
            $("#payablediv3").hide();
            $("#payablediv4").hide();
            $("#payablediv5").hide();
            $("#payablediv6").hide();

            $("#receivablediv1").show();
            $("#receivablediv2").show();
            $("#receivablediv3").show();
            $("#receivablediv4").show();
            $("#receivablediv5").show();
            $("#receivablediv6").show();

            $('#TransactionDate').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true
            }).on('changeDate', dateChanged);


            $('#Cardno').autocomplete({
                source: function (request, response) {
                    //var compid = $('#txtcompid').val();
                    //var year = $('#PATIENTYY').val();
                    $.ajax({
                        url: '@Url.Action("TagSearch3", "RPInfo")',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.CARDNO,
                                    value: item.CARDNO,
                                    name: item.PSGRNM


                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#Cardno').val(ui.item.label);
                    $('#passenger').val(ui.item.name);

                    txtOneChanged3();




                },
                change: $('#Cardno').keyup(_.debounce(txtOneChanged3, 100))
            });



            $('#Ticketno').change(function () {
                var ticket = $("#Ticketno").val();
                $.ajax({
                    url: '@Url.Action("TicketDate", "RPInfo")',
                    type: 'GET',
                    cache: false,
                    data: { query: ticket },
                    dataType: 'json',
                    success: function (data) {

                        $("#TicketDate").val(data);
                        $('#TicketDate').attr('readonly', true);

                    }
                });
            });


            $('#Cashamount').change(function () {
                document.getElementById('Creditamount').value = (document.getElementById('Amount').value - (document.getElementById('Cashamount').value));


            });
            $('#Amount').change(function () {
                document.getElementById('Cashamount').value = (document.getElementById('Amount').value);


            });

            $('#TransactionFor').change(function () {

                var changedtxt = $('#TransactionFor').val();



                if (changedtxt == "RECEIVABLE") {
                    $('#lableaccountnm').text('Receivable Head');

                    $("#payablediv1").hide();
                    $("#payablediv2").hide();
                    $("#payablediv3").hide();
                    $("#payablediv4").hide();
                    $("#payablediv5").hide();
                    $("#payablediv6").hide();

                    $("#receivablediv1").show();
                    $("#receivablediv2").show();
                    $("#receivablediv3").show();
                    $("#receivablediv4").show();
                    $("#receivablediv5").show();
                    $("#receivablediv6").show();



                }
                else if (changedtxt == "PAYABLE") {
                    $('#lableaccountnm').text('Payable Head');



                    $("#receivablediv1").hide();
                    $("#receivablediv2").hide();
                    $("#receivablediv3").hide();
                    $("#receivablediv4").hide();
                    $("#receivablediv5").hide();
                    $("#receivablediv6").hide();

                    $("#payablediv1").show();
                    $("#payablediv2").show();
                    $("#payablediv3").show();
                    $("#payablediv4").show();
                    $("#payablediv5").show();
                    $("#payablediv6").show();



                }
            });

            $('#Cardcid').change(function () {
                var changedtxt = $('#Cardcid').val();
                $.ajax
                   ({
                       url: '@Url.Action("Cardpidload", "RPInfo")',
                       type: 'post',
                       dataType: "json",
                       data: { type: changedtxt },
                       success: function (data) {
                           $("#Cardpid").empty();

                           $("#Cardpid").append('<option value="'
                               + '">'
                               + "--Select--" + '</option>');



                           $.each(data, function (i, memo) {

                               $("#Cardpid").append('<option value="'
                                   + memo.Value + '">'
                                   + memo.Text + '</option>');




                           });

                       }
                   });

            });



            $('#TicketDate2').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true,
                showOnFocus: true,
            }).on('show', function (e) {
                if (e.date) {
                    $(this).data('stickyDate', e.date);
                }
                else {
                    $(this).data('stickyDate', null);

                }
            }).on('hide', function () {
                //document.getElementById("BILLYY").focus();
            });

            //$('#gridTicketDate').datepicker({
            //    format: "dd-M-yyyy",
            //    autoclose: true,
            //    todayHighlight: true,
            //    showOnFocus: true,
            //}).on('show', function (e) {
            //    if (e.date) {
            //        $(this).data('stickyDate', e.date);
            //    }
            //    else {
            //        $(this).data('stickyDate', null);

            //    }
            //}).on('hide', function () {
            //    //document.getElementById("BILLYY").focus();
            //});
            

        });

        function dateChanged(ev) {

            var changedtxt = $('#TransactionDate').val();


            var txttransYear = document.getElementById('Transmonthyear');
            var txttransNo = document.getElementById('TransactionNo');

            $("#Transmonthyear").val("");

            $("#TransactionNo").val("");
            $.getJSON(
                         "/RPMultiple/DateChanged_getMonth", { "Changedtxt": changedtxt },
                         function (myData) {
                             txttransYear.value = myData.month;
                             txttransNo.value = myData.TransNo;




                             document.getElementById("Cardcid").focus();
                         });

        }

        function txtOneChanged3() {

            var changedText = $("#Cardno").val();


            var txtBox = document.getElementById('Cardno');
            var txtname = document.getElementById('passenger');

            if (changedText != "") {
                $.getJSON(
              '/RPInfo/keyword3', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.Cardno;

                   txtname.value = result.PSGRNM;


                   //document.getElementById("idCardNo").focus();

               });
                var changedtxt = $('#Cardno').val();
                var changedtxt2 = $('#TransactionFor').val();

                $.ajax
                   ({
                       url: '@Url.Action("AccountLoad", "RPInfo")',
                       type: 'post',
                       dataType: "json",
                       data: { type: changedtxt, type2: changedtxt2 },
                       success: function (data) {
                           $("#Accountcd").empty();

                           //if (changedtxt2 == "PAYABLE") {
                           //    $("#Accountcd").append('<option value="'
                           //  + '">'
                           //  + "--Select--" + '</option>');
                           //}




                           $.each(data, function (i, memo) {

                               $("#Accountcd").append('<option value="'
                                   + memo.Value + '">'
                                   + memo.Text + '</option>');




                           });

                       }
                   });


                $.ajax
                   ({
                       url: '@Url.Action("TicketLoad", "RPInfo")',
                       type: 'post',
                       dataType: "json",
                       data: { type: changedtxt, type2: changedtxt2 },
                       success: function (data) {
                           $("#Ticketno").empty();

                           $("#Ticketno").append('<option value="'
                             + '">'
                             + "--Select--" + '</option>');
                           




                           $.each(data, function (i, memo) {

                               $("#Ticketno").append('<option value="'
                                   + memo.Value + '">'
                                   + memo.Text + '</option>');




                           });

                       }
                   });



            }



        }




    </script>


}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>


<script src="~/Scripts/RP/multipleRP.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>


