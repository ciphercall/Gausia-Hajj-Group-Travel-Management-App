@using System.Data
@using System.Data.SqlClient
@using Travel.Models
@model Travel.Models.PageModel
@{
    ViewBag.Title = "Update";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);


    TravelDbContext db = new TravelDbContext();


    List<SelectListItem> transfor = new List<SelectListItem>();
    transfor.Add(new SelectListItem { Text = "RECEIVABLE", Value = "RECEIVABLE" });

    transfor.Add(new SelectListItem { Text = "PAYABLE", Value = "PAYABLE" });








}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

 
       @Html.HiddenFor(model => model.RPDRCR.COMPID, new { @Value = compid })
    @Html.HiddenFor(model => model.RPDRCR.Id, new { id = "Hiddenprimaryid" })

    <div id="contentHeaderBox">



        @if (TempData["RPMessage"] != null)
        {

            <h1 style="padding-left:16px">
                Receivable/Payable Delete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @TempData["RPMessage"]
            </h1>

        }
        else
        {
            <h1 style="padding-left:16px">
                Receivable/Payable Delete
            </h1>
        }






        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='RPInfo' AND COMPID='{0}' AND USERID = '{1}'", compid, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RPInfo")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "RPInfo")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RPInfo")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "RPInfo")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RPInfo")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RPInfo")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "RPInfo")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RPInfo")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "RPInfo")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "RPInfo")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "RPInfo")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "RPInfo")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />
    <div class="col-md-12">

        <div class="form-group">

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Transaction Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.TRANSDT, htmlAttributes: new { id = "idTransDT", @class = "form-control",autofocus=true })
                    @*@Html.ValidationMessageFor(model => model.carrier.CARRIERSID, "length should be 2", new { @class = "text-danger" })*@
                </div>

                <div class="col-md-2">
                    @Html.Label("R/P Type", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.RPDRCR.TRANSFOR, transfor,  htmlAttributes: new { id = "idTransFor", @class = "form-control" })

                </div>

            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Card No", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.passenger.CARDNO, htmlAttributes: new { id = "idCardNo", @class = "form-control" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Passenger Name", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.passenger.PSGRNM, htmlAttributes: new { id = "idPassenger", @class = "form-control", @readonly = "readonly" })

                </div>


            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Serial No", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.RPDRCR.TRANSNO, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { id = "idTransNO", @class = "form-control" })

                </div>

            </div>
            <hr />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Month", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.TRANSMY, htmlAttributes: new { id = "idTransMonth", @class = "form-control", @readonly = "readonly" })
                    @*@Html.ValidationMessageFor(model => model.carrier.CARRIERSID, "length should be 2", new { @class = "text-danger" })*@
                </div>
                <div class="col-md-2">
                    @Html.Label("Card Type", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.AGlCostPMST.COSTCNM, htmlAttributes: new { id = "idCardCID", @class = "form-control", @readonly = "readonly" })

                </div>


            </div>


            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Effect Head", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.AGlCostPool.COSTPNM, htmlAttributes: new { id = "idCardpid", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.AGL_acchart.ACCOUNTNM, htmlAttributes: new { id = "lableaccountnm", @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.AGL_acchart.ACCOUNTNM, htmlAttributes: new { id = "idAccountcd", @class = "form-control", @readonly = "readonly" })

                </div>

            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Ticket No", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.TICKETNO, htmlAttributes: new { id = "idTickNo", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Ticket Date", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.TICKETDT, htmlAttributes: new { id = "idTicDT", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Amount", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.AMOUNT, htmlAttributes: new { id = "idAmount", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Cash Amount", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.AMTCASH, htmlAttributes: new { id = "idAmtcash", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Credit Amount", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.AMTCREDIT, htmlAttributes: new { id = "idAmtcredit", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.RPDRCR.REMARKS, htmlAttributes: new { id = "idRemarks", @class = "form-control", @readonly = "readonly" })

                </div>

            </div>


            @Html.TextBoxFor(model => model.RPDRCR.INSLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-3">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" />
                </div>
                @*<div class="col-md-3">
                        <input type="submit" class="btn btn-primary btn-block" id="createp" value="Create & Print" name="command" formtarget="_blank" />

                    </div>*@
            </div>
        </div>
    </div>











    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $("#idTransDT").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            });
            $(function () {
                $("#idTicDT").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            });

            $('#lableaccountnm').text('Receivable Head');


            $('#idAmtcash').change(function () {
                document.getElementById('idAmtcredit').value = (document.getElementById('idAmount').value - (document.getElementById('idAmtcash').value));


            });
            $('#idAmount').change(function () {
                document.getElementById('idAmtcash').value = (document.getElementById('idAmount').value);


            });




            $('#idCardCID').autocomplete({

                source: '@Url.Action("TagSearch", "RPInfo")',


                change: $('#idCardCID').keyup(_.debounce(txtOneChanged, 1000))






            });

            $('#idCardpid').autocomplete({

                source: '@Url.Action("TagSearch2", "RPInfo")',


                change: $('#idCardpid').keyup(_.debounce(txtOneChanged2, 1000))

            });
            $('#idCardNo').autocomplete({

                source: function (request, response) {
                    //var compid = $('#txtcompid').val();
                    //var year = $('#PATIENTYY').val();
                    $.ajax({
                        url: '@Url.Action("TagSearch3", "RPInfo")',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.CARDNO,
                                    value: item.CARDNO,
                                    name: item.PSGRNM


                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#idCardNo').val(ui.item.value);
                    $('#idPassenger').val(ui.item.name);
                    var changedtxt = ui.item.value;
                    var changedtxt2 = $('#idTransDT').val();
                    var changedtxt3 = $('#idTransFor').val();

                    //var txtname = document.getElementById('idPassenger');

                    //$('#idPassenger').val("");


                    //$.getJSON(
                    //    "/Passenger/CardNo_Changed", { "Changedtxt": changedtxt },
                    //    function (myData) {
                    //        txtname.value = myData.name;
                    //        document.getElementById("idTransNO").focus();
                    //    });

                    $.ajax
                     ({
                         url: '@Url.Action("Serialload", "RPInfo")',
                         type: 'post',
                         dataType: "json",
                         data: { type: changedtxt, type2: changedtxt2, type3: changedtxt3 },
                         success: function (data) {
                             $("#idTransNO").empty();

                             $("#idTransNO").append('<option value="'
                                 + '">'
                                 + "--Select--" + '</option>');



                             $.each(data, function (i, memo) {

                                 $("#idTransNO").append('<option value="'
                                     + memo.Value + '">'
                                     + memo.Text + '</option>');




                             });

                         }
                     });


                },


                change: $('#idCardNo').keyup(_.debounce(txtOneChanged3, 100))

            });
            @*$('#idCardNo').autocomplete({

                source: '@Url.Action("TagSearch3", "RPInfo")',
                select: function (event, ui) {
                    var changedtxt = ui.item.value;
                    var changedtxt2 = $('#idTransDT').val();
                    var changedtxt3 = $('#idTransFor').val();

                    var txtname = document.getElementById('idPassenger');
                    // var txtTransno = document.getElementById('idTransFor');
                    $('#idPassenger').val("");


                    $.getJSON(
                        "/Passenger/CardNo_Changed", { "Changedtxt": changedtxt },
                        function (myData) {
                            txtname.value = myData.name;
                            document.getElementById("idTransNO").focus();
                        });

                    $.ajax
                     ({
                         url: '@Url.Action("Serialload", "RPInfo")',
                         type: 'post',
                         dataType: "json",
                         data: { type: changedtxt, type2: changedtxt2, type3: changedtxt3 },
                         success: function (data) {
                             $("#idTransNO").empty();

                             $("#idTransNO").append('<option value="'
                                 + '">'
                                 + "--Select--" + '</option>');



                             $.each(data, function (i, memo) {

                                 $("#idTransNO").append('<option value="'
                                     + memo.Value + '">'
                                     + memo.Text + '</option>');




                             });

                         }
                     });
                    },

                change: $('#idCardNo').keyup(_.debounce(txtOneChanged3, 500))

            });*@

            $('#idAccountcd').autocomplete({

                source: '@Url.Action("TagSearch4", "RPInfo")',


                change: $('#idAccountcd').keyup(_.debounce(txtOneChanged4, 1000))

            });

            @*$('#idCardNo').change(function () {
                var changedtxt = $('#idCardNo').val();
                var changedtxt2 = $('#idTransDT').val();
                var changedtxt3 = $('#idTransFor').val();

                var txtname = document.getElementById('idPassenger');
                // var txtTransno = document.getElementById('idTransFor');
                $('#idPassenger').val("");


                $.getJSON(
                    "/Passenger/CardNo_Changed", { "Changedtxt": changedtxt },
                    function (myData) {
                        txtname.value = myData.name;
                        document.getElementById("idTransNO").focus();
                    });

                $.ajax
                 ({
                     url: '@Url.Action("Serialload", "RPInfo")',
                     type: 'post',
                     dataType: "json",
                     data: { type: changedtxt, type2: changedtxt2, type3: changedtxt3 },
                     success: function (data) {
                         $("#idTransNO").empty();

                         $("#idTransNO").append('<option value="'
                             + '">'
                             + "--Select--" + '</option>');



                         $.each(data, function (i, memo) {

                             $("#idTransNO").append('<option value="'
                                 + memo.Value + '">'
                                 + memo.Text + '</option>');




                         });

                     }
                 });

            });*@

            $('#idTransNO').change(function () {


                var changedtxt = $('#idTransNO').val();



                var txtprimarykey = document.getElementById('Hiddenprimaryid');


                var txtMonth = document.getElementById('idTransMonth');

                var txtCardtype = document.getElementById('idCardCID');
                var txtEffecHead = document.getElementById('idCardpid');

                var txtAccountName = document.getElementById('idAccountcd');
                var txtTicketNo = document.getElementById('idTickNo');

                var txtTicketDate = document.getElementById('idTicDT');
                var txtAmount = document.getElementById('idAmount');

                var txtCashAmount = document.getElementById('idAmtcash');
                var txtCreditAmount = document.getElementById('idAmtcredit');
                var txtRemarks = document.getElementById('idRemarks');


                $.getJSON(
                    "/RPInfo/Update_SelectTransNo", { "Changedtxt": changedtxt },
                    function (myData) {
                        txtprimarykey.value = myData.keyid;

                        txtMonth.value = myData.Month;
                        txtCardtype.value = myData.CardType;
                        txtEffecHead.value = myData.EffectHead;
                        txtAccountName.value = myData.AccountName;


                        txtTicketNo.value = myData.TicketNo;
                        txtTicketDate.value = myData.TicketDate;
                        txtAmount.value = myData.Amount;
                        txtCashAmount.value = myData.CashAmount;

                        txtCreditAmount.value = myData.CreditAmount;
                        txtRemarks.value = myData.Remarks;

                        //$("#textBoxID").attr("readonly");

                    });
            });
            $('#idTransFor').change(function () {

                var changedtxt = $('#idTransFor').val();



                if (changedtxt == "RECEIVABLE") {
                    $('#lableaccountnm').text('Receivable Head');

                }
                else if (changedtxt == "PAYABLE") {
                    $('#lableaccountnm').text('Payable Head');

                }
            });

        });
        function txtOneChanged() {

            var changedText = $("#idCardCID").val();


            var txtBox = document.getElementById('idCardCID');


            if (changedText != "") {
                $.getJSON(
              '/RPInfo/keyword', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.CostCNM;







                   document.getElementById("idCardCID").focus();

               });
            }



        }
        function txtOneChanged2() {

            var changedText = $("#idCardpid").val();


            var txtBox = document.getElementById('idCardpid');


            if (changedText != "") {
                $.getJSON(
              '/RPInfo/keyword2', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.CostPNM;







                   document.getElementById("idCardpid").focus();

               });
            }



        }
        function txtOneChanged3() {

            var changedText = $("#idCardNo").val();


            var txtBox = document.getElementById('idCardNo');
            var txtname = document.getElementById('idPassenger');

            if (changedText != "") {
                $.getJSON(
              '/RPInfo/keyword3', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.Cardno;

                   txtname.value = result.PSGRNM;


                   //document.getElementById("idCardNo").focus();

               });
          
            }



        }
        function txtOneChanged4() {

            var changedText = $("#idAccountcd").val();


            var txtBox = document.getElementById('idAccountcd');


            if (changedText != "") {
                $.getJSON(
              '/RPInfo/keyword4', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.Accountnm;







                   document.getElementById("idAccountcd").focus();

               });
            }



        }
    </script>



}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>


<script src="~/Scripts/Underscore.js"></script>