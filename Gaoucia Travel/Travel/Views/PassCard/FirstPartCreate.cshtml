
@using System.Data
@using System.Data.SqlClient
@using Travel.Models
@model Travel.Models.Travel.TAMS_PSNGRCARD

@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    TravelDbContext db = new TravelDbContext();
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);


    List<SelectListItem> VnType = new List<SelectListItem>();
    VnType.Add(new SelectListItem { Text = "VISA", Value = "VISA" });
    VnType.Add(new SelectListItem { Text = "NOC", Value = "NOC" });

    var carrierid = from n in db.carrierDbSet where n.COMPID == compid select n;
    List<SelectListItem> listcarrier = new List<SelectListItem>();
    foreach (var x in carrierid)
    {
        listcarrier.Add(new SelectListItem { Text = x.CARRIERNM, Value = Convert.ToString(x.CARRIERID) });
    }

    List<SelectListItem> gender = new List<SelectListItem>();
    gender.Add(new SelectListItem { Text = "MALE", Value = "MALE" });
    gender.Add(new SelectListItem { Text = "FEMALE", Value = "FEMALE" });



    List<SelectListItem> agentname = new List<SelectListItem>();
    var accountname = from n in db.GlAcchartDbSet where n.COMPID == compid && n.HLEVELCD == 5 select n;
    foreach (var glAcchart in accountname)
    {
        if ((glAcchart.CONTROLCD.ToString().Substring(0, 10) == Convert.ToString(compid) + "1020201") || (glAcchart.CONTROLCD.ToString().Substring(0, 10) == Convert.ToString(compid) + "1020202"))
        {
            agentname.Add(new SelectListItem { Text = glAcchart.ACCOUNTNM, Value = Convert.ToString(glAcchart.ACCOUNTCD) });
        }

    }

    List<SelectListItem> costcid = new List<SelectListItem>();
    var costhead = (from n in db.GLCostPMSTDbSet where n.COMPID == compid select new { n.COSTCID, n.COSTCNM }).ToList();
    foreach (var item in costhead)
    {
        costcid.Add(new SelectListItem { Text = item.COSTCNM, Value = Convert.ToString(item.COSTCID) });
    }

    List<SelectListItem> package = new List<SelectListItem>();
    package.Add(new SelectListItem { Text = "PACKAGE-A", Value = "PACKAGE-A" });

    package.Add(new SelectListItem { Text = "PACKAGE-B", Value = "PACKAGE-B" });
    package.Add(new SelectListItem { Text = "PACKAGE-C", Value = "PACKAGE-C" });
    package.Add(new SelectListItem { Text = "VVIP", Value = "VVIP" });
    package.Add(new SelectListItem { Text = "GOLD", Value = "GOLD" });



    List<SelectListItem> psgtype = new List<SelectListItem>();
    psgtype.Add(new SelectListItem { Text = "HAJJI", Value = "HAJJI" });
    psgtype.Add(new SelectListItem { Text = "OMRAH HAJJI", Value = "OMRAH HAJJI" });
    psgtype.Add(new SelectListItem { Text = "PASSENGER", Value = "PASSENGER" });
    psgtype.Add(new SelectListItem { Text = "GUIDE", Value = "GUIDE" });
    psgtype.Add(new SelectListItem { Text = "MONAZZEM", Value = "MONAZZEM" });
    psgtype.Add(new SelectListItem { Text = "OTHERS", Value = "OTHERS" });

    List<SelectListItem> mstatus = new List<SelectListItem>();
    mstatus.Add(new SelectListItem { Text = "MARRIED", Value = "MARRIED" });
    mstatus.Add(new SelectListItem { Text = "SINGLE", Value = "SINGLE" });



    List<SelectListItem> passporttp = new List<SelectListItem>();
    passporttp.Add(new SelectListItem { Text = "GENERAL", Value = "GENERAL" });
    passporttp.Add(new SelectListItem { Text = "OFFICIAL", Value = "OFFICIAL" });
    passporttp.Add(new SelectListItem { Text = "DIPLOMATIC", Value = "DIPLOMATIC" });

    List<SelectListItem> license = new List<SelectListItem>();
    var licensedata = (from n in db.licenseDbSet where n.COMPID == compid select new { n.LICENSEID, n.LICENSENM }).ToList();
    foreach (var item in licensedata)
    {
        license.Add(new SelectListItem { Text = item.LICENSENM, Value = Convert.ToString(item.LICENSEID) });
    }

    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

}

@*<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />

    <link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />

    <script src="~/Scripts/bootstrap-datepicker.js"></script>*@

@using (Html.BeginForm("FirstPartCreate", "PassCard", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.COMPID, new { @Value = compid })

    // @Html.HiddenFor(model => model.CARDID)
    <div id="contentHeaderBox">

        @if (TempData["PassengerMessage"] != null)
        {

            <h1 style="padding-left:16px">Create Passenger's Card Information(1st Part)&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @TempData["PassengerMessage"]</h1>

        }
        else
        {
            <h1 style="padding-left:16px">Create Passenger Card Information(1st Part)</h1>
        }
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='PassCard' AND COMPID='{0}' AND USERID = '{1}'", compid, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();

            if (createStatus == 'A'.ToString())
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active">@Html.ActionLink("1st Part", "FirstPartCreate", "PassCard", new { style = "color: black;background-color: gainsboro;" })</li>
                    <li>@Html.ActionLink("2nd Part", "SecondPartCreate", "PassCard", new { style = "color: black" })</li>
                </ul>
            }
            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "PassCard")"><i class="fa fa-plus"></i>Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "PassCard")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PassCard")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "PassCard")"><i class="fa fa-edit"></i>Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PassCard")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "PassCard")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "PassCard")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "PassCard")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PassCard")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "PassCard")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "PassCard")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "PassCard")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />
    <div class="col-md-12">
        @*@if (TempData["PassengerMessage"] != null)
            {
                <div class="panel-heading text-center">
                    <h4 style="color: #226699">@TempData["PassengerMessage"]</h4>
                </div>
            }*@
        <div class="form-group">
            <div class="row">
                <br />
                <div class="col-md-2">
                    @Html.Label("Card No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDNO, htmlAttributes: new { id = "idCardNo", @class = "form-control input-sm", autofocus = true })

                </div>
                <div class="col-md-2">
                    @Html.Label("Card Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDDT, htmlAttributes: new { id = "idCarddt", @class = "form-control", @readonly = "readonly", tabIndex = "-1" })

                    @Html.ValidationMessageFor(model => model.CARDDT, "", new { @class = "text-danger" })
                </div>
                
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Year", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDYY, htmlAttributes: new { id = "idYear", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })

                    @* @Html.ValidationMessageFor(model => model.CARDYY, "", new { @class = "text-danger" })*@
                </div>
                <div class="col-md-2">
                    @Html.Label("Passenger SL", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDNOP, htmlAttributes: new { id = "idCardnop", @class = "form-control input-sm", @readonly = "readonly", tabIndex = "-1" })

                    @* @Html.ValidationMessageFor(model => model.CARDYY, "", new { @class = "text-danger" })*@
                </div>
               


            </div>
            <div><hr></div>
            @*<br />*@
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Card Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CARDCID, costcid, "--Select--", htmlAttributes: new { id = "idCardType", @class = "form-control input-sm", tabIndex = "-1" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Package Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.PKGSTP, package, "--Select--", htmlAttributes: new { id = "PKGSTP", @class = "form-control input-sm", tabIndex = "-1" })

                </div>
               


            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("License", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.LICENSEID, license, "--Select--", htmlAttributes: new { id = "LICENSEID", @class = "form-control input-sm", tabIndex = "-1" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Passenger Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.PSGRTP, psgtype, "--Select--", htmlAttributes: new { id = "psgtype", @class = "form-control input-sm", tabIndex = "-1" })

                </div>




            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Passenger Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PSGRNM, htmlAttributes: new { id = "idJOBCDT", @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.PSGRNM, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Agent Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.AGENTID, agentname, "--Select--", htmlAttributes: new { id = "idAgentname", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AGENTID, "", new { @class = "text-danger" })

                </div>

            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Father Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.FATHERNM, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>

                <div class="col-md-2">
                    @Html.Label("Mother Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.MOTHERNM, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>


            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Date Of Birth", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DOB, htmlAttributes: new { id = "idDateofBirth", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Nationality", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NATIONALITY, htmlAttributes: new { id = "Nationality", @class = "form-control input-sm", @Value = "BANGLADESHI" })

                </div>

            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Marital Status", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.MSTATUS, mstatus, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>

                <div class="col-md-2">
                    @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.GENDER, gender, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>


            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Blood Group", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.BLOODG, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Education", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.EDUCATION, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>


            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Profession", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PROFESSION, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Designation", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DESIGNATION, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Birth Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.BIRTHPLACE, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.COUNTRY, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm", @Value = "BANGLADESH" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Mobile No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.MOBNO, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Telephone", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.TELNO, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Non-Govt No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NGNO, htmlAttributes: new { id = "NGNO", @class = "form-control input-sm", Maxlength = "6", Minlength = "6" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Pilgrim ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PILGRIMID, htmlAttributes: new { id = "PILGRIMID", @class = "form-control input-sm", Maxlength = "7", Minlength = "7" })

                </div>
            </div>
            <hr />



            <div class="row">
                <div class="col-md-2">
                    @Html.Label("National ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NID, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm", Maxlength = "17" })

                </div>

                <div class="col-md-2">
                    @Html.Label("Passport No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PASSPORTNO, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />
            <div class="row">


                <div class="col-md-2">
                    @Html.Label("Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ISSUEDT, htmlAttributes: new { id = "idIssuedt", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Issue Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ISSUEPLACE, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.EXPIREDT, htmlAttributes: new { id = "idExpiredt", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Passport Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">

                    @Html.DropDownListFor(model => model.PASSPORTTP, passporttp, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })
                </div>

            </div>
            <br />




            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Carrier Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CARRIERID, listcarrier, "--Select--", htmlAttributes: new { id = "CARRIERID", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Route", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROUTE, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>

            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Visa/NOC Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.VNTP, VnType, "--Select--", htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Visa/NOC No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNNO, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNIDT, htmlAttributes: new { id = "idVnIDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNEDT, htmlAttributes: new { id = "idVnEDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Issue Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNIPLACE, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.REMARKS, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Photo", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    <input type="file" id="image1" name="file" accept="image/*" />
                </div>

            </div>

            @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-primary btn-block" value="Create" id="createid" />

                </div>

            </div>

        </div>
    </div>







    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $("#idDateofBirth").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            });

            var f1 = document.getElementById('image1');

            f1.onchange = function (e) {
                var ext = this.value.match(/\.(.+)$/)[1];
                switch (ext) {
                    case 'jpg':
                        //case 'bmp':
                    case 'png':
                        //case 'tif':
                        alert('allowed');
                        break;
                    default:
                        alert('not allowed');
                        this.value = '';
                }
            };




            $('#idCarddt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idIssuedt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idExpiredt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idVnIDT').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idVnEDT').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });

            $('#createid').click(function () {
                document.getElementById("idAgentname").disabled = false;

                document.getElementById("LICENSEID").disabled = false;

                document.getElementById("idCardType").disabled = false;
            });

            $('#idCardNo').autocomplete({

                source: '@Url.Action("TagSearch", "Passenger")',
                select: function (event, ui) {
                    var changedtxt = ui.item.value;


                    var txtCarddt = document.getElementById('idCarddt');

                    var txtYear = document.getElementById('idYear');
                    var txtCardnop = document.getElementById('idCardnop');


                    var txtidCardType = document.getElementById('idCardType');

                    var txtPKGSTP = document.getElementById('PKGSTP');
                    var txtLICENSEID = document.getElementById('LICENSEID');
                    var txtpsgtype = document.getElementById('psgtype');

                    var txtidAgentname = document.getElementById('idAgentname');
                    var txtCARRIERID = document.getElementById('CARRIERID');

                    $('#idCarddt').val("");
                    $('#idYear').val("");

                    $.getJSON(
                        "/PassCard/CardNo_Changed2", { "Changedtxt": changedtxt },
                        function (myData) {


                            txtCarddt.value = myData.carddt;
                            txtYear.value = myData.Year;
                            txtCardnop.value = myData.cardnop;
                            txtidCardType.value = myData.cardcid;
                            txtPKGSTP.value = myData.pkgstp;
                            txtLICENSEID.value = myData.license;
                            txtpsgtype.value = myData.psgrtp;
                            txtidAgentname.value = myData.agentid;
                            txtCARRIERID.value = myData.carrierid;

                            document.getElementById("idAgentname").disabled = true;

                            document.getElementById("LICENSEID").disabled = true;

                            document.getElementById("idCardType").disabled = true;
                            //document.getElementById("idpermanentAdd").focus();
                        });
                },

                change: $('#idCardNo').keyup(_.debounce(txtOneChanged, 500))






            });

      

        });
        function txtOneChanged() {

            var changedText = $("#idCardNo").val();


            var txtBox = document.getElementById('idCardNo');


            if (changedText != "") {
                $.getJSON(
              '/Passenger/keyword', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.Cardno;







                   document.getElementById("idCardNo").focus();

               });
            }



        }


    </script>


}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>






