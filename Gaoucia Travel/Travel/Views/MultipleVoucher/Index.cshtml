@using Travel.Models

@model Travel.Models.DTO.MTransDTO

@{
    ViewBag.Title = "Index";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var InUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    TravelDbContext db = new TravelDbContext();




    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    string date = currentDateTime.ToString("yyyy-MM-dd");
    string year = date.Substring(0, 4);

    Int64 userid = Convert.ToInt64(HttpContext.Current.Session["loggedUserID"]);

    List<SelectListItem> branchlist = new List<SelectListItem>();
    var search_branch = (from n in db.Asl_BranchDbSet where n.COMPID == compid select n).ToList();
    if (LoggedUserTp == "CompanyAdmin")
    {
        foreach (var x in search_branch)
        {
            branchlist.Add(new SelectListItem { Text = x.BRANCHNM, Value = Convert.ToString(x.BRANCHID) });
        }
    }
    else
    {
        var search_user_branch = (from n in db.AslUsercoDbSet where n.COMPID == compid && n.USERID == userid select n).ToList();
        foreach (var y in search_branch)
        {
            foreach (var b in search_branch)
            {
                if (y.BRANCHID == b.BRANCHID)
                {
                    branchlist.Add(new SelectListItem { Text = b.BRANCHNM, Value = Convert.ToString(b.BRANCHID) });
                    break;
                }

            }
        }
    }

    List<SelectListItem> listtype = new List<SelectListItem>();

    listtype.Add(new SelectListItem
    {
        Text = "PAYMENT",
        Value = "MPAY"
    });
    listtype.Add(new SelectListItem
    {
        Text = "RECEIPT",
        Value = "MREC"
    });
    listtype.Add(new SelectListItem
    {
        Text = "JOURNAL",
        Value = "JOUR"
    });
    listtype.Add(new SelectListItem
    {
        Text = "CONTRA",
        Value = "CONT"
    });

    List<SelectListItem> listTransFor = new List<SelectListItem>();

    listTransFor.Add(new SelectListItem
    {
        Text = "OFFICIAL",
        Value = "OFFICIAL"
    });
    listTransFor.Add(new SelectListItem
    {
        Text = "CARD",
        Value = "CARD"
    });
    var costpname = from n in db.GlCostPoolDbSet where n.COMPID == compid select new { n.COSTPNM, n.COSTPID };
    List<SelectListItem> listcostpname = new List<SelectListItem>();
    foreach (var x in costpname)
    {
        listcostpname.Add(new SelectListItem { Text = x.COSTPNM, Value = Convert.ToString(x.COSTPID) });
    }
    List<SelectListItem> listTransMode = new List<SelectListItem>();

    listTransMode.Add(new SelectListItem
    {
        Text = "CASH",
        Value = "CASH"
    });
    listTransMode.Add(new SelectListItem
    {
        Text = "A/C PAYEE CHEQUE",
        Value = "A/C PAYEE CHEQUE"
    });

    listTransMode.Add(new SelectListItem
    {
        Text = "CASH CHEQUE",
        Value = "CASH CHEQUE"
    });
    listTransMode.Add(new SelectListItem
    {
        Text = "EFT",
        Value = "EFT"
    });

    List<SelectListItem> listofCardno = new List<SelectListItem>();
    var search_cardno = (from n in db.passengerDbSet where n.COMPID == compid select n).OrderBy(x=>x.CARDNO).ToList();
    foreach(var ss in search_cardno)
    {
        listofCardno.Add(new SelectListItem { Text =ss.CARDNO, Value = Convert.ToString(ss.CARDNO) });
    }
    
    
}

<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />
<link href="~/Content/bootstrap_datepicker_css/datepicker.css" rel="stylesheet" />
<link href="~/Content/bootstrap_datepicker_css/datepicker3.css" rel="stylesheet" />




<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>




@using (Html.BeginForm())
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Multiple Voucher</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "MultipleVoucher")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                        <a href="@Url.Action("Update", "MultipleVoucher")"><i class="fa fa-edit"></i> Update</a>
                    </li>
                @*<li>
                        <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                    </li>*@

            </ul>
        </div>

    </div>
    <div class="col-md-12">
        <div class="form-group">
            @*@Html.HiddenFor(model=>model.CompanyID, new { id = "txtcompid", style = "width:3em;", @Value = compid })*@

            @Html.HiddenFor(model => model.INSUSERID, new { id = "InUserID", style = "width:5em;", @Value = InUserId })

            <div ng-app="MultipleVoucher" data-ng-controller="ApiMultipleVoucherController">

                <div class="row">
                    @Html.HiddenFor(model => model.CompanyID, new { id = "txtcompid", style = "width:3em;", @Value = compid })

                    <div class="col-md-3">
                        <label>Branch Name</label>
                        <span>
                            @Html.DropDownListFor(model => model.BranchID, branchlist, new { @class = "form-control input-sm", id = "BranchID" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label> Transaction Type</label>
                        <span>
                            @Html.DropDownListFor(model => model.TransType, listtype, "--Select--", new { @class = "form-control input-sm", id = "TransType" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>Transaction Date</label>
                        <span>
                            @Html.TextBoxFor(model => model.TransDate, new { id = "TransDate", @class = "form-control" })
                        </span>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-2">
                        <label>Month</label>
                        <span>
                            @Html.TextBoxFor(model => model.TransMonthYear, new { id = "TransMonthYear", @class = "form-control", @readonly = "true", tabindex = "-1" })
                        </span>
                    </div>
                    <div class="col-md-3">
                        <label>Invoice</label>
                        <span>
                            @Html.TextBoxFor(model => model.Transno, new { id = "Transno", @class = "form-control", @readonly = "true", tabindex = "-1" })
                        </span>
                    </div>

                    <div class="col-md-1">
                        <input style="margin-top: 22px" type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" id="submit" />
                    </div>
                    <div class="col-md-2">
                        <input style="margin-top: 22px" type="submit" value="Print" name="command" class="btn btn-primary" formtarget="_target" id="printButtonId" />
                    </div>
                    @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                    <input id="lat" type="hidden" />
                    <input id="lon" type="hidden" />



                </div>

                <br />

                <table class="table table-bordered table-hover">

                    <tr>

                        <td width="8%"><label>Type</label></td>
                        <td width="8%" id="idcostpool1">@Html.Label("Card Type", htmlAttributes: new { @class = "control-label" })</td>
                        <td width="8%"><label> Card No</label></td>
                        <td width="8%"><label> Passenger</label></td>

                        <td width="8%"><label> Mode</label></td>


                        <td width="8%">@Html.Label("Debited To", htmlAttributes: new { id = "DebitAccount", @class = "control-label" })</td>
                        <td width="8%">@Html.Label("Credited To", htmlAttributes: new { id = "CreditAccount", @class = "control-label" })</td>
                        <td width="8%" id="chequel1"><label>Cheque No</label></td>
                        <td width="8%" id="chequel2"><label>Date</label></td>
                        <td width="8%"><label>Amount</label></td>
                        <td width="8%"><label>Remarks</label></td>
                        <td width="8%"></td>
                        <td width="4%"></td>
                    </tr>
                    <tr>
                       
                        <td width="8%">@Html.DropDownListFor(model => model.TransFor, listTransFor, new { data_ng_model = "newChild.TransFor", id = "TransFor", @class = "form-control input-sm" })</td>
                        <td width="8%" id="costpool">@Html.DropDownListFor(model => model.CostPoolID, listcostpname,  htmlAttributes: new { data_ng_model = "newChild.CostPoolID", id = "CostPoolID", @class = "form-control input-sm" })</td>
                        
                        <td width="8%">@Html.DropDownListFor(model => model.Cardno, listofCardno, new { data_ng_model = "newChild.Cardno", id = "Cardno", @class = "form-control input-sm" })</td>
                        <td width="8%" id="costpool">@Html.TextBoxFor(model => model.Passenger, htmlAttributes: new { data_ng_model = "newChild.Passenger", id = "Passenger", @class = "form-control input-sm" })</td>

                        <td width="8%">@Html.DropDownListFor(model => model.TransactionMode, listTransMode, htmlAttributes: new { id = "TransactionMode", @class = "form-control input-sm" })</td>
                        <td width="8%">@Html.DropDownListFor(model => model.DebitCode, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { id = "DebitCode", @class = "form-control input-sm", required = "required" })</td>
                        <td width="8%">@Html.DropDownListFor(model => model.CreditCode, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { id = "CreditCode", @class = "form-control input-sm", required = "required" })</td>
                        <td width="8%" id="cheque1">@Html.TextBoxFor(model => model.CHEQUENO, htmlAttributes: new { id = "CHEQUENO", @class = "form-control input-sm" })</td>
                        <td width="8%" id="cheque2">@Html.TextBoxFor(model => model.CHEQUEDT, htmlAttributes: new { id = "CHEQUEDT", @class = "form-control input-sm" })</td>
                        <td width="8%">@Html.TextBoxFor(model => model.Amount, htmlAttributes: new { @class = "form-control input-sm", id = "Amount", required = "required" })</td>
                        <td width="8%">@Html.TextBoxFor(model => model.REMARKS, htmlAttributes: new { @class = "form-control input-sm", id = "REMARKS" })</td>
                        <td width="8%"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>
                       
                    </tr>
                    <tr data-ng-repeat="item in mtransData">
                        <td hidden><strong data-ng-hide="item.editMode">{{item.ID}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransSerial}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.CompanyID}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.BranchID}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.Transno}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransType}}</strong></td>
                        <td hidden><strong data-ng-hide="item.editMode">{{item.TransDate}}</strong></td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.TransFor }}</p>
                            @Html.DropDownListFor(model => model.TransFor, listTransFor, "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.TransFor", @class = "form-control input-sm",id="gridtransfor" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.CostPoolName }}</p>
                            @Html.DropDownListFor(model => model.CostPoolID, listcostpname, "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.CostPoolID", @class = "form-control input-sm", id="gridCostpoolID" })

                        </td>

                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.Cardno }}</p>
                            @Html.DropDownListFor(model => model.Cardno, listofCardno, "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.Cardno", @class = "form-control input-sm", id = "gridCardno" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.Passenger }}</p>
                            @Html.TextBoxFor(model => model.Passenger, new { data_ng_show = "item.editMode", data_ng_model = "item.Passenger", @class = "form-control input-sm", id = "gridPassenger" })

                        </td>

                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.TransactionMode }}</p>
                            @Html.DropDownListFor(model => model.TransactionMode, listTransMode, "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.TransactionMode", @class = "form-control input-sm" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.DebitAccount }}</p>
                            @Html.DropDownListFor(model => model.DebitCode, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.DebitCode", @class = "form-control input-sm", id = "griddebit", required = "required" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.CreditAccount }}</p>
                            @Html.DropDownListFor(model => model.CreditCode, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { data_ng_show = "item.editMode", data_ng_model = "item.CreditCode", @class = "form-control input-sm", id = "gridcredit", required = "required" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.CHEQUENO }}</p>
                            @Html.TextBoxFor(model => model.CHEQUENO, new { data_ng_show = "item.editMode", data_ng_model = "item.CHEQUENO", @class = "form-control input-sm" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.CHEQUEDT }}</p>
                            @Html.TextBoxFor(model => model.CHEQUEDT, new { data_ng_show = "item.editMode", data_ng_model = "item.CHEQUEDT", @class = "form-control input-sm" })

                        </td>
                        <td width="10%">
                            <p data-ng-hide="item.editMode">{{ item.Amount }}</p>
                            @Html.TextBoxFor(model => model.Amount, new { data_ng_show = "item.editMode", data_ng_model = "item.Amount", @class = "form-control input-sm", required = "required" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode">{{ item.REMARKS }}</p>
                            @Html.TextBoxFor(model => model.REMARKS, new { data_ng_show = "item.editMode", data_ng_model = "item.REMARKS", @class = "form-control input-sm" })

                        </td>
                        <td width="8%">
                            <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a>| <a data-ng-click="printitem(item)" href="javascript:;">Print</a></p>
                            <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="cancel()" href="javascript:;">Cancel</a>| <a data-ng-click="printitem(item)" href="javascript:;">Print</a></p>

                        </td>
                      

                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td><b>Total :</b></td>
                          
                        <td><p id="gridTotalamount">{{GetSummOfAmount(mtransData)}}</p></td>
                        <td></td>
                        <td></td>
                       
                        </tr>
                </table>


            </div>



        </div>
    </div>


    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>


    <script type="text/javascript">
        $(document).ready(function () {

            $('#CHEQUENO').attr("disabled", "disabled");
            $('#CHEQUEDT').attr("disabled", "disabled");

            $('#Passenger').attr("disabled", "disabled");

            //$('#cheque1').hide();
            //$('#cheque2').hide();
            //$('#chequel1').hide();
            //$('#chequel2').hide();

            $('#TransDate').datepicker({
                format: "dd-M-yyyy",
                autoclose: true,
                todayHighlight: true
            }).on('changeDate', dateChanged);


            $('#Amount').change(function () {
                var amm = $('#Amount').val();
                GetSummOfAmountmanual(amm);

            });
            $('#Amount').keyup(function () {
                var amm = $('#Amount').val();
                var total = $('#gridTotalamount').val();
                var summ = Number(amm) + Number(total);
                $('#gridTotalamount').text(summ);
            });

            $('#printButtonId').click(function () {
                setTimeout(function () { window.location.reload(); }, 1000);
            });


            
            $('#Cardno').change(function () {
                var changedtxt = $('#Cardno').val();
                var txtname = document.getElementById('Passenger');
                $('#Passenger').val("");


                $.getJSON(
                    "/Passenger/CardNo_Changed", { "Changedtxt": changedtxt },
                    function (myData) {
                        txtname.value = myData.name;
                        //document.getElementById("idTransFor").focus();
                    });

                var changedtxt1 = $('#TransType').val();
              

                if (changedtxt1 == "MREC") {
                    $.ajax
                   ({
                       url: '@Url.Action("CardNo_Changed", "Transaction")',
                       type: 'post',
                       dataType: "json",
                       data: { type: changedtxt, type1: changedtxt1 },
                       success: function (data1) {

                           $("#CreditCode").empty();


                           //$("#idcreditcd").append('<option value="'
                           //    + '">'
                           //   + "--Select--" + '</option>');

                           $.each(data1, function (i, memo1) {

                               $("#CreditCode").append('<option value="'
                                   + memo1.Value + '">'
                                   + memo1.Text + '</option>');




                           });

                       }
                   });
                }


            });

            $('#TransType').change(function () {

                var changedtxt = $('#TransType').val();
                $('#TransDate').val("");
                $('#TransMonthYear').val("");
                $('#Transno').val("");

                if (changedtxt == "MREC") {
                    $('#DebitAccount').text('Received To');
                    $('#CreditAccount').text('Received From');
                } else if (changedtxt == "MPAY") {
                    $('#DebitAccount').text('Paid To');
                    $('#CreditAccount').text('Paid From');
                } else if (changedtxt == "JOUR") {
                    $('#DebitAccount').text('Debited To');
                    $('#CreditAccount').text('Credited To');
                } else if (changedtxt == "CONT") {
                    $('#DebitAccount').text('Deposited To');
                    $('#CreditAccount').text('Withdrawl From');
                }


                $.ajax
                ({
                    url: '@Url.Action("Debitcdload", "MultipleVoucher")',
                    type: 'post',
                    dataType: "json",
                    data: { type: changedtxt },
                    success: function (data) {
                        $("#DebitCode").empty();
                     

                        $("#DebitCode").append('<option value="'
                            + '">'
                            + "--Select--" + '</option>');

                     

                        $.each(data, function (i, memo) {

                            $("#DebitCode").append('<option value="'
                                + memo.Value + '">'
                                + memo.Text + '</option>');


                        });
                        

                    }
                });

                $.ajax
                ({
                    url: '@Url.Action("Creditload", "MultipleVoucher")',
                    type: 'post',
                    dataType: "json",
                    data: { type: changedtxt },
                    success: function (data1) {

                        $("#CreditCode").empty();


                        $("#CreditCode").append('<option value="'
                            + '">'
                            + "--Select--" + '</option>');

                        $.each(data1, function (i, memo1) {

                            $("#CreditCode").append('<option value="'
                                + memo1.Value + '">'
                                + memo1.Text + '</option>');


                        });

                    }
                });


                $('#DebitCode').change(function () {

                    var debitvalue = $('#DebitCode').val();
                    if (changedtxt != "MREC") {
                        $.ajax
                  ({
                      url: '@Url.Action("CreditloadAfterDebitselect", "MultipleVoucher")',
                      type: 'post',
                      dataType: "json",
                      data: { type: changedtxt, dvalue: debitvalue },
                      success: function (data1) {

                          $("#CreditCode").empty();


                          $("#CreditCode").append('<option value="'
                              + '">'
                              + "--Select--" + '</option>');

                          $.each(data1, function (i, memo1) {

                              $("#CreditCode").append('<option value="'
                                  + memo1.Value + '">'
                                  + memo1.Text + '</option>');


                          });

                      }
                  });
                    }
                  


                });


            });

            $('#TransFor').change(function () {

                var changedtxt = $('#TransFor').val();
                if (changedtxt == "OFFICIAL") {
                    //$('#costpool').hide();
                    //$('#idcostpool1').hide();
                    $('#CostPoolID').attr("disabled", "disabled");
                    $('#Cardno').attr("disabled", "disabled");

                } else {
                    //$('#costpool').show();
                    //$('#idcostpool1').show();
                    $('#CostPoolID').attr("disabled", false);
                    $('#Cardno').attr("disabled", false);
                }
            });

            $('#TransactionMode').change(function () {

                var changedtxt = $('#TransactionMode').val();
                if (changedtxt == "A/C PAYEE CHEQUE" || changedtxt == "CASH CHEQUE") {
                    $('#CHEQUENO').attr("disabled", false);
                    $('#CHEQUEDT').attr("disabled", false);
                    //$('#cheque1').show();
                    //$('#cheque2').show();
                    //$('#chequel1').show();
                    //$('#chequel2').show();

                } else {
                    $('#CHEQUENO').attr("disabled", "disabled");
                    $('#CHEQUEDT').attr("disabled", "disabled");
                    //$('#chequel1').hide();
                    //$('#chequel2').hide();

                }
            });
            $('#CHEQUEDT').datepicker({
                format: "dd-M-yyyy",
                autoclose: true
                //format: "yyyy-M-dd"
            });





        });
        //function GetSummOfAmountmanual(amm){
        //     var summ = 0;
      
        //     var gridtotal = $('#gridTotalamount').val();
        //     summ = Number(gridtotal) + Number(amm);
       
        //$('#gridTotalamount').val(summ);
       
        //}

        function dateChanged(ev) {


            var changedtxt = $('#TransDate').val();
            var changedtxt2 = $('#TransType').val();

            var txttransYear = document.getElementById('TransMonthYear');
            var txttransNo = document.getElementById('Transno');

            $("#TransMonthYear").val("");

            $("#Transno").val("");

            $.getJSON(
                "/MultipleVoucher/DateChanged_getMonth", { "Changedtxt": changedtxt, "Changedtxt2": changedtxt2 },
                function (myData) {
                    txttransYear.value = myData.month;
                    txttransNo.value = myData.TransNo;


                    document.getElementById("submit").focus();
                });

        }





    </script>


}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/bootstrap-datepicker.js"></script>

<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>


<script src="~/Scripts/Account/multiplevoucher.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>


