@using Travel.DataAccess
@using Travel.Models
@model Travel.Models.PageModel

@{
    Layout = null;

    var LoggedCompId = Model.AGlMaster.COMPID;

    Int64 compid = Convert.ToInt64(LoggedCompId);

    string companyName = "", address = "", contactNo = "";
    TravelDbContext db = new TravelDbContext();
    var SelectCompanyName = from n in db.AslCompanyDbSet

                            where n.COMPID == compid
                            select new { n.COMPNM, n.ADDRESS, n.CONTACTNO };

    foreach (var n in SelectCompanyName)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;


    var fromdate = Model.AGlMaster.TRANSDT;



    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);


    decimal sumcredit = 0, sumdebit = 0, result = 0, debitamount = 0, creditamount = 0, totaldebit = 0, totalcredit = 0;
    string tdebit = "", tcredit = "";
}

<!DOCTYPE html>

<html lang="en">
<head>
    <link href="~/Content/reportcss/style.css" rel="stylesheet" />
</head>
<body>

    <table id="mainTable" border="0" width="100%">
        <thead>
            <tr>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="10%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>

            </tr>
            <tr style="background-color: #00689b">
                <td colspan="12">
                    <h3 style="color: white;padding:4px">@compNm</h3>
                    <p style="color:white;padding-left:4px">@Address<span>  @contactno</span></p>
                </td>

                <td colspan="6" style="color: white;padding:8px" align="right">
                    Powered By<br />Alchemy Software
                </td>

            </tr>
            <tr>
                <td colspan="12" align="left" style="padding: 4px; font-weight: bold">Trial Balance</td>
                <td align="right" colspan="6" style="padding:8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
            </tr>
            <tr style="outline: thin solid">

                @{
                    string d = Convert.ToString(fromdate);
                    DateTime fdate = DateTime.Parse(d);
                    string ffdt = fdate.ToString("dd-MMM-yyyy");


                }
                <td colspan="12" style="font-weight: bold;padding:4px">
                    As On : <span style="font-weight:bold">@ffdt</span>

                </td>
            </tr>
            <tr style="background-color: #00689b; outline: thin solid">
                <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">Head Description</td>
                <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">Debit Balance</td>
                <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">Credit Balance</td>


            </tr>
        </thead>
        <tbody>
            @{
                var debitcdfind = (from n in db.GlMasterDbSet where n.COMPID == compid && n.TRANSDT <= fromdate select new { n.DEBITCD }).Distinct().ToList();

                var findaccountname = (from m in db.GlAcchartDbSet where m.COMPID == compid select new { m.ACCOUNTCD, m.ACCOUNTNM }).ToList();

                var tabledata = (from a in db.GlMasterDbSet where a.COMPID == compid && a.TRANSDT <= fromdate select a).ToList();
                Int64 i = 0;

            }
            @foreach (var item in debitcdfind)
            {
                if (i == 0)
                {
                    <tr style="outline: thin solid">


                        @foreach (var x in findaccountname)
                        {
                            if (x.ACCOUNTCD == item.DEBITCD)
                            {
                                <td colspan="6" style="padding-left: 4px">@Html.DisplayFor(modelItem => x.ACCOUNTNM)</td>
                                break;
                            }
                        }
                        @{
                        sumdebit = 0;
                        sumcredit = 0;
                        }

                        @foreach (var x1 in tabledata)
                        {
                            if (x1.DEBITCD == item.DEBITCD)
                            {
                                sumdebit = Convert.ToDecimal(sumdebit + x1.DEBITAMT);
                                sumcredit = Convert.ToDecimal(sumcredit + x1.CREDITAMT);




                            }
                        }
                        @{
                        string code = Convert.ToString(item.DEBITCD).Substring(3, 1);
                        if (code == "1" || code == "4")
                        {
                            result = sumdebit - sumcredit;
                            if (result >= 0)
                            {
                                debitamount = result;
                                creditamount = Convert.ToDecimal(0.00);
                            }
                            else
                            {
                                result = result * (-1);

                                creditamount = result;
                                debitamount = Convert.ToDecimal(0.00);
                            }

                        }
                        else if (code == "2" || code == "3")
                        {
                            result = sumcredit - sumdebit;
                            if (result >= 0)
                            {

                                creditamount = result;
                                debitamount = Convert.ToDecimal(0.00);
                            }
                            else
                            {
                                result = result * (-1);

                                debitamount = result;
                                creditamount = Convert.ToDecimal(0.00);
                            }
                        }
                        totaldebit = Convert.ToDecimal(totaldebit + debitamount);
                        totalcredit = Convert.ToDecimal(totalcredit + creditamount);

                        }
                        @if (debitamount == 0)
                        {
                            <td colspan="6" align="right">0.00</td>
                        }
                        else
                        {
                            string damount = Convert.ToString(debitamount);

                            string ddamount = CommainAmount.AmountwithComma(damount);
                            <td colspan="6" align="right">@ddamount</td>
                        }
                        @if (creditamount == 0)
                        {
                            <td colspan="6" align="right">0.00</td>
                        }
                        else
                        {
                            string camount = Convert.ToString(creditamount);

                            string ccamount = CommainAmount.AmountwithComma(camount);
                            <td colspan="6" align="right">@ccamount</td>
                        }


                    </tr>
                        i = 1;
                }
                else
                {
                    <tr style="outline: thin initial">


                        @foreach (var x in findaccountname)
                        {
                            if (x.ACCOUNTCD == item.DEBITCD)
                            {
                                <td colspan="6" style="padding-left: 4px">@Html.DisplayFor(modelItem => x.ACCOUNTNM)</td>
                                break;
                            }
                        }
                        @{
                        sumdebit = 0;
                        sumcredit = 0;
                        }

                        @foreach (var x1 in tabledata)
                        {
                            if (x1.DEBITCD == item.DEBITCD)
                            {
                                sumdebit = Convert.ToDecimal(sumdebit + x1.DEBITAMT);
                                sumcredit = Convert.ToDecimal(sumcredit + x1.CREDITAMT);




                            }
                        }
                        @{
                        string code = Convert.ToString(item.DEBITCD).Substring(3, 1);
                        if (code == "1" || code == "4")
                        {
                            result = sumdebit - sumcredit;
                            if (result >= 0)
                            {
                                debitamount = result;
                                creditamount = Convert.ToDecimal(0.00);
                            }
                            else
                            {
                                result = result * (-1);

                                creditamount = result;
                                debitamount = Convert.ToDecimal(0.00);
                            }

                        }
                        else if (code == "2" || code == "3")
                        {
                            result = sumcredit - sumdebit;
                            if (result >= 0)
                            {

                                creditamount = result;
                                debitamount = Convert.ToDecimal(0.00);
                            }
                            else
                            {
                                result = result * (-1);

                                debitamount = result;
                                creditamount = Convert.ToDecimal(0.00);
                            }
                        }
                        totaldebit = Convert.ToDecimal(totaldebit + debitamount);
                        totalcredit = Convert.ToDecimal(totalcredit + creditamount);

                        }
                        @if (debitamount == 0)
                        {
                            <td colspan="6" align="right">0.00</td>
                        }
                        else
                        {
                            string damount = Convert.ToString(debitamount);

                            string ddamount = CommainAmount.AmountwithComma(damount);
                            <td colspan="6" align="right">@ddamount</td>
                        }
                        @if (creditamount == 0)
                        {
                            <td colspan="6" align="right">0.00</td>
                        }
                        else
                        {
                            string camount = Convert.ToString(creditamount);

                            string ccamount = CommainAmount.AmountwithComma(camount);
                            <td colspan="6" align="right">@ccamount</td>
                        }


                    </tr>
                        i = 0;
                }




            }
            <tr style=" outline: thin solid">
                <td colspan="6" style="font-weight: bold;padding-left: 4px">Total : </td>
                @{
                    string convertdebit = Convert.ToString(totaldebit);

                    tdebit = CommainAmount.AmountwithComma(convertdebit);

                    string convertcredit = Convert.ToString(totalcredit);
                    tcredit = CommainAmount.AmountwithComma(convertcredit);

                }
                <td colspan="6" style="font-weight: bold" align="right">@tdebit</td>
                <td colspan="6" style="font-weight: bold" align="right">@tcredit</td>
            </tr>

        </tbody>
    </table>



</body>
</html>
