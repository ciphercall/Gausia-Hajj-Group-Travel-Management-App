@using System.Data
@using System.Data.SqlClient
@using System.Data.SqlTypes
@using Travel.Models
@model Travel.Models.PageModel
@{
    ViewBag.Title = "CardWiseTSReport";
    Layout = null;

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    TravelDbContext db = new TravelDbContext();
    var companyId = Convert.ToInt64(Model.RPDRCR.COMPID);

    string companyName = "", address = "", contactNo = "";
    var re = from m in db.AslCompanyDbSet where m.COMPID == companyId select new { m.COMPNM, m.ADDRESS, m.CONTACTNO };
    foreach (var n in re)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;

    DateTime fdate = Convert.ToDateTime(Model.FromDate);
    string ddt = fdate.ToString("dd-MMM-yyyy");
    var fromdate = ddt;

    DateTime tDate = Convert.ToDateTime(Model.ToDate);
    string tdd = tDate.ToString("dd-MMM-yyyy");
    var todate = tdd;







    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);




}




<!DOCTYPE html>
<html lang="en">
<head>

    <link href="~/Content/reportcss/style.css" rel="stylesheet" />

</head>
<body>

    <table id="mainTable" border="0" width="100%">
        <thead>
            <tr>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="10%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>
                <td width="5%"></td>

            </tr>
            <tr style="background-color: #00689b">
                <td colspan="12">
                    <h3 style="color: white;padding:4px">@compNm</h3>
                    <p style="color:white;padding-left:4px">@Address<br />  @contactno</p>
                </td>

                <td colspan="6" style="color: white;padding:8px" align="right">
                    Powered By<br />Alchemy Software
                </td>

            </tr>
            <tr>
                <td colspan="12" align="left" style="padding: 4px; font-weight: bold">Card Wise Transaction Statement</td>
                <td align="right" colspan="6" style="padding:8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
            </tr>

            <tr style="outline: thin solid">
                <td colspan="9" style="padding:4px;font-weight:bold">From Date : <span style="font-weight: bold">@fromdate</span></td>
                <td colspan="9" style="font-weight: bold"> To Date : <span style="font-weight:bold">@todate</span></td>
            </tr>

            <tr style="background-color: #00689b; outline: thin solid">

                <td colspan="1" style="color: white; padding: 4px" align="center">Sl</td>
                <td colspan="2" style="color: white; padding: 4px" align="center">Card No</td>
                <td colspan="1" style="color: white; padding: 4px" align="center">Year</td>
                <td colspan="2" style="color: white; padding: 4px" align="center">Passenger Name</td>
                <td colspan="3" style="color: white; padding: 4px" align="center">Receivable Amount</td>
                <td colspan="3" style="color: white; padding: 4px" align="center">Received</td>
                <td colspan="3" style="color: white; padding: 4px" align="center">Due</td>

                <td colspan="3" style="color: white; padding: 4px" align="center">Expensed</td>
            </tr>
        </thead>
        <tbody>
            @{
                Decimal total_Receivable = 0, total_Received = 0, total_Due = 0, total_Expensed = 0;
            }
            @{
                var groupCarddtwithType = (from n in db.passengerDbSet
                                           where n.COMPID == companyId && n.CARDDT >= fdate && n.CARDDT <= tDate
                                           select new { n.CARDDT, n.CARDCID }).Distinct().ToList();
                var costheadfind = (from n in db.GLCostPMSTDbSet where n.COMPID == companyId select new { n.COSTCID, n.COSTCNM }).ToList();
                foreach (var groupBy in groupCarddtwithType)
                {
                    total_Receivable = 0;
                    total_Received = 0;
                    total_Due = 0;
                    total_Expensed = 0;
                    DateTime date = Convert.ToDateTime(groupBy.CARDDT);
                    string carddt_convertDate = date.ToString("dd-MMM-yyyy");
                    string costpnm = "";
                    foreach (var x in costheadfind)
                    {
                        if (Convert.ToString(x.COSTCID) == groupBy.CARDCID)
                        {
                            costpnm = Convert.ToString(x.COSTCNM);
                            break;
                        }

                    }



                    System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());


                    string query = string.Format("SELECT CARDDT, CARDCID, CARDNO, PSGRNM, SUM(RCVAMT) RCVAMT, SUM(RECAMT) RECAMT, (SUM(RCVAMT) -SUM(RECAMT)) DUEAMT, SUM(PAMT) PAMT FROM( " +
                                                 "SELECT CARDDT, TAMS_PASSENGER.CARDCID, CARDNO, PSGRNM, SUM(AMOUNT) RCVAMT, 0 RECAMT, 0 PAMT " +
                                                 "FROM TAMS_PASSENGER LEFT OUTER JOIN TAMS_RPDRCR ON TAMS_RPDRCR.CARDID = TAMS_PASSENGER.CARDID " +
                                                 "WHERE TAMS_RPDRCR.COMPID='{0}' AND TAMS_RPDRCR.TRANSFOR = 'RECEIVABLE' AND CARDDT BETWEEN '{1}' AND '{2}' " +
                                                 "GROUP BY CARDDT, TAMS_PASSENGER.CARDCID, CARDNO, PSGRNM " +
                                                 "UNION " +
                                                 "SELECT CARDDT, TAMS_PASSENGER.CARDCID, TAMS_PASSENGER.CARDNO, PSGRNM, 0 RCVAMT, SUM(DEBITAMT) RECAMT, 0 PAMT " +
                                                 "FROM TAMS_PASSENGER LEFT OUTER JOIN GL_MASTER ON GL_MASTER.CARDID = TAMS_PASSENGER.CARDID " +
                                                 "WHERE GL_MASTER.COMPID='{0}' AND GL_MASTER.TRANSDRCR = 'DEBIT' AND TRANSTP = 'MREC' AND CARDDT BETWEEN '{1}' AND '{2}' " +
                                                 "GROUP BY CARDDT, TAMS_PASSENGER.CARDCID, TAMS_PASSENGER.CARDNO, PSGRNM " +
                                                 "UNION " +
                                                 "SELECT CARDDT, TAMS_PASSENGER.CARDCID, TAMS_PASSENGER.CARDNO, PSGRNM, 0 RCVAMT, 0 RECAMT, SUM(DEBITAMT) PAMT " +
                                                 "FROM TAMS_PASSENGER LEFT OUTER JOIN GL_MASTER ON GL_MASTER.CARDID = TAMS_PASSENGER.CARDID " +
                                                 "WHERE GL_MASTER.COMPID='{0}' AND GL_MASTER.TRANSDRCR = 'DEBIT' AND TRANSTP = 'MPAY' AND CARDDT BETWEEN '{1}' AND '{2}' " +
                                                 "GROUP BY CARDDT, TAMS_PASSENGER.CARDCID, TAMS_PASSENGER.CARDNO, PSGRNM " +
                                                 ") A GROUP BY CARDDT, CARDCID, CARDNO, PSGRNM " +
                                                 "ORDER BY CARDDT, CARDCID, CARDNO ", companyId, fdate, todate);


                    System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
                    conn.Open();
                    SqlDataAdapter da = new SqlDataAdapter(cmd);
                    DataTable ds = new DataTable();
                    da.Fill(ds);

                    string carddt = "", Cardno = "", Passengername = "", TicketNo = "", Ticketdt = "", CardCID = "";
                    Decimal RcvAmt = 0, RecAmt = 0, DueAmt = 0;
                    Decimal PAmount = 0;
                    int i = 0;//only for first data

                    int flag = 0;


                    foreach (DataRow row in ds.Rows)
                    {

                        i++;
                        carddt = row["CARDDT"].ToString();


                        CardCID = row["CARDCID"].ToString();
                        if (carddt == groupBy.CARDDT.ToString() && CardCID == groupBy.CARDCID.ToString())
                        {

                            if (i == 1)
                            {
                                <tr>
                                    <td colspan="2" align="left" style="font-weight: bold">
                                        Date :
                                    </td>
                                    <td colspan="6" align="left" style="font-weight: bold">
                                        @carddt_convertDate
                                    </td>
                                    <td colspan="2" align="left" style="font-weight: bold">
                                        Type :
                                    </td>
                                    <td colspan="6" align="left" style="font-weight: bold">
                                        @costpnm
                                    </td>
                                </tr>
                                flag = 1;
                            }





                            Cardno = row["CARDNO"].ToString();
                            Passengername = row["PSGRNM"].ToString();
                            string year = "20" + Cardno.Substring(0, 2);



                            RcvAmt = Convert.ToDecimal(row["RCVAMT"]);
                            RecAmt = Convert.ToDecimal(row["RECAMT"]);
                            DueAmt = Convert.ToDecimal(row["DUEAMT"]);
                            PAmount = Convert.ToDecimal(row["PAMT"]);

                            //Balance = PurchaseAmount - Saleamount;



                            <tr style="outline: thin solid">
                                <td align="center" colspan="1">
                                    @i
                                </td>

                                <td align="center" colspan="2">
                                    @Cardno
                                </td>
                                <td align="center" colspan="1">
                                    @year
                                </td>
                                <td align="center" colspan="2">
                                    @Passengername
                                </td>


                                <td align="right" colspan="3">
                                    @RcvAmt
                                </td>
                                <td align="right" colspan="3">
                                    @RecAmt
                                </td>

                                <td align="right" colspan="3">
                                    @DueAmt
                                </td>
                                <td align="right" colspan="3">
                                    @PAmount
                                </td>
                            </tr>

                            total_Receivable = total_Receivable + RcvAmt;
                            total_Received = total_Received + RecAmt;
                            total_Due = total_Due + DueAmt;
                            total_Expensed = total_Expensed + PAmount;
                        }
                        else
                        {
                            i = 0;
                        }


                    }
                    if (flag == 1)
                    {
                        <tr>


                            <td align="right" colspan="6" style="font-weight:bold">
                                Total:
                            </td>
                            <td align="right" colspan="3" style="font-weight:bold">
                                @total_Receivable
                            </td>
                            <td align="right" colspan="3" style="font-weight:bold">
                                @total_Received
                            </td>
                            <td align="right" colspan="3" style="font-weight:bold">
                                @total_Due
                            </td>
                            <td align="right" colspan="3" style="font-weight:bold">
                                @total_Expensed
                            </td>
                        </tr>
                    }


                    conn.Close();
                }

            }






        </tbody>
    </table>


</body>
</html>
