@using System.Data
@using System.Data.SqlClient
@using Travel.Models
@model Travel.Models.Travel.TAMS_PASSENGER

@{
    ViewBag.Title = "Delete";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    TravelDbContext db = new TravelDbContext();
    
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);


    List<SelectListItem> VnType = new List<SelectListItem>();
    VnType.Add(new SelectListItem { Text = "VISA", Value = "VISA" });
    VnType.Add(new SelectListItem { Text = "NOC", Value = "NOC" });

    var carrierid = from n in db.carrierDbSet where n.COMPID == compid select n;
    List<SelectListItem> listcarrier = new List<SelectListItem>();
    foreach (var x in carrierid)
    {
        listcarrier.Add(new SelectListItem { Text = x.CARRIERNM, Value = Convert.ToString(x.CARRIERID) });
    }

    List<SelectListItem> gender = new List<SelectListItem>();
    gender.Add(new SelectListItem { Text = "MALE", Value = "MALE" });
    gender.Add(new SelectListItem { Text = "FEMALE", Value = "FEMALE" });



    List<SelectListItem> agentname = new List<SelectListItem>();
    var accountname = from n in db.GlAcchartDbSet where n.COMPID == compid select n;
    foreach (var glAcchart in accountname)
    {
        agentname.Add(new SelectListItem { Text = glAcchart.ACCOUNTNM, Value = Convert.ToString(glAcchart.ACCOUNTCD) });
    }


    List<SelectListItem> listCardno = new List<SelectListItem>();
    var cardno = from n in db.passengerDbSet where n.COMPID == compid select new { n.CARDNO };
    foreach (var x in cardno)
    {
        listCardno.Add(new SelectListItem { Text = Convert.ToString(x.CARDNO), Value = Convert.ToString(x.CARDNO) });
    }

    List<SelectListItem> costcid = new List<SelectListItem>();
    var costhead = (from n in db.GLCostPMSTDbSet where n.COMPID == compid select new { n.COSTCID, n.COSTCNM }).ToList();
    foreach (var item in costhead)
    {
        costcid.Add(new SelectListItem { Text = item.COSTCNM, Value = Convert.ToString(item.COSTCID) });
    }
    
    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.COMPID, new { @Value = compid })
    
    @Html.HiddenFor(model => model.Id, new { id = "txtid" })
    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Delete Passenger Information(1st Part)</h1>
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='Passenger' AND COMPID='{0}' AND USERID = '{1}'", compid, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();

            if (createStatus == 'A'.ToString())
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li class="active">@Html.ActionLink("1st Part", "FirstPartCreate", "Passenger", new { style = "color: black;background-color: gainsboro;" })</li>
                    @*<li>@Html.ActionLink("2nd Part", "SecondPartCreate", "Passenger", new { style = "color: black" })</li>*@
                </ul>
            }
            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "Passenger")"><i class="fa fa-plus"></i>Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "Passenger")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Passenger")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "Passenger")"><i class="fa fa-edit"></i>Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Passenger")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "Passenger")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "Passenger")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "Passenger")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Passenger")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartCreate", "Passenger")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("FirstPartUpdate", "Passenger")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "Passenger")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />
    <div class="col-md-12">
        @if (TempData["PassengerMessage"] != null)
        {
            <div class="panel-heading text-center">
                <h4 style="color: #226699">@TempData["PassengerMessage"]</h4>
            </div>
        }
        <div class="form-group">
            <div class="row">

                <br />
                <div class="col-md-2">
                    @Html.Label("Card No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDNO, htmlAttributes: new { id = "idCardNo", @class = "form-control input-sm",autofocus=true })

                </div>
                <div class="col-md-2">
                    @Html.Label("Passenger Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PSGRNM, htmlAttributes: new { id = "idPassenger", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <div>
                <hr />
            </div>
            <div class="row">
                <br />
                <div class="col-md-2">
                    @Html.Label("Card Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDDT, htmlAttributes: new { id = "idCarddt", @class = "form-control", @readonly = "readonly" })

                    @Html.ValidationMessageFor(model => model.CARDDT, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.Label("Year", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.CARDYY, htmlAttributes: new { id = "idYear", @class = "form-control input-sm", @readonly = "readonly" })


                </div>
            </div>

            <br />
            <div class="row">


                <div class="col-md-2">
                    @Html.Label("Agent Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.AGENTID, agentname, "--Select--", htmlAttributes: new { id = "idAgentname", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.AGENTID, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Card Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CARDCID, costcid, "--Select--", htmlAttributes: new { id = "idCardcid", @class = "form-control input-sm",@readonly="readonly" })

                </div>
                
                

            </div>
            <div><hr></div>
            @*<br />*@

            <div class="row">


                <div class="col-md-2">
                    @Html.Label("Gender", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.GENDER, gender, "--Select--", htmlAttributes: new { id = "idgender", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Father Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.FATHERNM, htmlAttributes: new { id = "idfathername", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Mother Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.MOTHERNM, htmlAttributes: new { id = "idmothername", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Nationality", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NATIONALITY, htmlAttributes: new { id = "idnationality", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Profession", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PROFESSION, htmlAttributes: new { id = "idprofession", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Date Of Birth", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DOB, htmlAttributes: new { id = "idDateofBirth", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Nationality", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.NATIONALITY, htmlAttributes: new { id = "idJOBCDT", @class = "form-control input-sm", @Value = "BANGLADESHI" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Birth Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.BIRTHPLACE, htmlAttributes: new { id = "idbirthplace", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Country", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.COUNTRY, htmlAttributes: new { id = "idcountry", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <hr />
            @*<div><hr/></div>*@
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Passport No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.PASSPORTNO, htmlAttributes: new { id = "idpassportno", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ISSUEDT, htmlAttributes: new { id = "idIssuedt", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Issue Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ISSUEPLACE, htmlAttributes: new { id = "idIssuePlace", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.EXPIREDT, htmlAttributes: new { id = "idExpiredt", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />




            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Route", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.ROUTE, htmlAttributes: new { id = "idRoot", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Carrier Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.CARDCID, listcarrier, "--Select--", htmlAttributes: new { id = "idCarriername", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Visa/NOC Type", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.VNTP, VnType, "--Select--", htmlAttributes: new { id = "idVntype", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Visa/NOC No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNNO, htmlAttributes: new { id = "idVnNo", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Issue Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNIDT, htmlAttributes: new { id = "idVnIDT", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Expire Date", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNEDT, htmlAttributes: new { id = "idVnEDT", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">

                <div class="col-md-2">
                    @Html.Label("Issue Place", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.VNIPLACE, htmlAttributes: new { id = "idVnIplace", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.REMARKS, htmlAttributes: new { id = "idRemarks", @class = "form-control input-sm", @readonly = "readonly" })

                </div>
            </div>
          
           

            @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" />

                </div>

            </div>

        </div>
    </div>







    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $("#idDateofBirth").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            });

            $('#idCarddt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idIssuedt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idExpiredt').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idVnIDT').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            $('#idVnEDT').datepicker({ dateFormat: 'dd-M-yy', changeYear: true });



            $('#idCardNo').autocomplete({

                source: '@Url.Action("TagSearch", "Passenger")',
                select: function (event, ui) {
                    var changedtxt = ui.item.value;
                    var txtid = document.getElementById('txtid');
                    var txtPassenger = document.getElementById('idPassenger');
                    var txtCarddt = document.getElementById('idCarddt');

                    var txtYear = document.getElementById('idYear');
                    var txtAgentname = document.getElementById('idAgentname');

                    var txtgender = document.getElementById('idgender');
                    var txtfathername = document.getElementById('idfathername');



                    var txtmothername = document.getElementById('idmothername');
                    var txtnationality = document.getElementById('idnationality');

                    var txtprofession = document.getElementById('idprofession');
                    var txtDateofBirth = document.getElementById('idDateofBirth');
                    //var txtage = document.getElementById('idage');



                    var txtbirthplace = document.getElementById('idbirthplace');
                    var txtcountry = document.getElementById('idcountry');



                    var txtpassportno = document.getElementById('idpassportno');
                    var txtIssuedt = document.getElementById('idIssuedt');

                    var txtIssuePlace = document.getElementById('idIssuePlace');
                    var txtExpiredt = document.getElementById('idExpiredt');
                    var txtRoot = document.getElementById('idRoot');
                    var txtCarriername = document.getElementById('idCarriername');

                    var txtVntype = document.getElementById('idVntype');
                    var txtVnNo = document.getElementById('idVnNo');



                    var txtVnIDT = document.getElementById('idVnIDT');

                    var txtVnEdt = document.getElementById('idVnEDT');
                    var txtVnIplace = document.getElementById('idVnIplace');
                    var txtRemarks = document.getElementById('idRemarks');
                    var txtCardcid = document.getElementById('idCardcid');

                    $('#idPassenger').val("");


                    $.getJSON(
                        "/Passenger/CardNo_Changed2", { "Changedtxt": changedtxt },
                        function (myData) {
                            txtid.value = myData.id;
                            txtPassenger.value = myData.passenger;
                            txtCarddt.value = myData.carddt;
                            txtYear.value = myData.Year;

                            txtAgentname.value = myData.agentname;
                            txtgender.value = myData.gender;
                            txtfathername.value = myData.fathername;
                            txtmothername.value = myData.mothername;

                            txtnationality.value = myData.nationality;
                            txtprofession.value = myData.profession;
                            txtDateofBirth.value = myData.dateofbirth;
                            //txtage.value = myData.age;

                            txtbirthplace.value = myData.birthplace;
                            txtcountry.value = myData.country;
                            txtpassportno.value = myData.passportno;
                            txtIssuedt.value = myData.issudt;

                            txtIssuePlace.value = myData.issueplace;
                            txtExpiredt.value = myData.expiredt;

                            txtRoot.value = myData.root;
                            txtCarriername.value = myData.carriername;
                            txtVntype.value = myData.vntype;
                            txtVnNo.value = myData.vnno;

                            txtVnIDT.value = myData.vnidt;
                            txtVnEdt.value = myData.vnedt;
                            txtVnIplace.value = myData.vniplace;
                            txtRemarks.value = myData.remarks;
                            txtCardcid.value = myData.cardcid;

                            //document.getElementById("idpermanentAdd").focus();
                        });

                    },

                change: $('#idCardNo').keyup(_.debounce(txtOneChanged, 500))






            });



            $('#idCarddt').change(function () {

                var changedtxt = $('#idCarddt').val();



                var txtyear = document.getElementById('idYear');
               // var txtcardno = document.getElementById('idCardNo');


                $("#idYear").val("");

                $("#idCardNo").val("");
                $.getJSON(
                    "/Passenger/DateChanged_getyear", { "Changedtxt": changedtxt },
                    function (myData) {

                        txtyear.value = myData.year;
                       // txtcardno.value = myData.cardno;



                        document.getElementById("idAgentname").focus();
                    });

            });

            //$('#idCardNo').change(function () {
            //    var changedtxt = $('#idCardNo').val();
            //    var txtid = document.getElementById('txtid');
            //    var txtPassenger = document.getElementById('idPassenger');
            //    var txtCarddt = document.getElementById('idCarddt');

            //    var txtYear= document.getElementById('idYear');
            //    var txtAgentname = document.getElementById('idAgentname');

            //    var txtgender = document.getElementById('idgender');
            //    var txtfathername = document.getElementById('idfathername');



            //    var txtmothername = document.getElementById('idmothername');
            //    var txtnationality = document.getElementById('idnationality');

            //    var txtprofession = document.getElementById('idprofession');
            //    var txtDateofBirth = document.getElementById('idDateofBirth');
            //    var txtage = document.getElementById('idage');



            //    var txtbirthplace = document.getElementById('idbirthplace');
            //    var txtcountry = document.getElementById('idcountry');



            //    var txtpassportno = document.getElementById('idpassportno');
            //    var txtIssuedt = document.getElementById('idIssuedt');

            //    var txtIssuePlace = document.getElementById('idIssuePlace');
            //    var txtExpiredt = document.getElementById('idExpiredt');
            //    var txtRoot = document.getElementById('idRoot');
            //    var txtCarriername = document.getElementById('idCarriername');

            //    var txtVntype = document.getElementById('idVntype');
            //    var txtVnNo = document.getElementById('idVnNo');



            //    var txtVnIDT = document.getElementById('idVnIDT');

            //    var txtVnEdt = document.getElementById('idVnEDT');
            //    var txtVnIplace = document.getElementById('idVnIplace');
            //    var txtRemarks = document.getElementById('idRemarks');
            //    var txtCardcid = document.getElementById('idCardcid');
                
            //    $('#idPassenger').val("");


            //    $.getJSON(
            //        "/Passenger/CardNo_Changed2", { "Changedtxt": changedtxt },
            //        function (myData) {
            //            txtid.value = myData.id;
            //            txtPassenger.value = myData.passenger;
            //            txtCarddt.value = myData.carddt;
            //            txtYear.value = myData.Year;

            //            txtAgentname.value = myData.agentname;
            //            txtgender.value = myData.gender;
            //            txtfathername.value = myData.fathername;
            //            txtmothername.value = myData.mothername;

            //            txtnationality.value = myData.nationality;
            //            txtprofession.value = myData.profession;
            //            txtDateofBirth.value = myData.dateofbirth;
            //            txtage.value = myData.age;

            //            txtbirthplace.value = myData.birthplace;
            //            txtcountry.value = myData.country;
            //            txtpassportno.value = myData.passportno;
            //            txtIssuedt.value = myData.issudt;

            //            txtIssuePlace.value = myData.issueplace;
            //            txtExpiredt.value = myData.expiredt;

            //            txtRoot.value = myData.root;
            //            txtCarriername.value = myData.carriername;
            //            txtVntype.value = myData.vntype;
            //            txtVnNo.value = myData.vnno;

            //            txtVnIDT.value = myData.vnidt;
            //            txtVnEdt.value = myData.vnedt;
            //            txtVnIplace.value = myData.vniplace;
            //            txtRemarks.value = myData.remarks;
            //            txtCardcid.value = myData.cardcid;

            //            //document.getElementById("idpermanentAdd").focus();
            //        });

            //});




        });

        function txtOneChanged() {

            var changedText = $("#idCardNo").val();


            var txtBox = document.getElementById('idCardNo');


            if (changedText != "") {
                $.getJSON(
              '/Passenger/keyword', { "ChangedText": changedText },
               function (result) {
                   txtBox.value = result.Cardno;







                   document.getElementById("idCardNo").focus();

               });
            }



        }

    </script>


}



<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>





