@using System.Data
@using System.Data.SqlClient
@using Travel.Models
@model Travel.Models.PageModel
@{
    ViewBag.Title = "Update";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);


    TravelDbContext db = new TravelDbContext();

    List<SelectListItem> carriersid = new List<SelectListItem>();

    var Carriersid = (from n in db.carrierDbSet where n.COMPID == compid select new { n.CARRIERSID });
    foreach (var x in Carriersid)
    {
        carriersid.Add(new SelectListItem { Text = x.CARRIERSID, Value = x.CARRIERSID });
    }










}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.flight.COMPID, new { @Value = compid })
    @Html.HiddenFor(model => model.flight.Id, new { id = "Hiddenprimaryid" })

    <div id="contentHeaderBox">



        @if (TempData["FlightMessage"] != null)
        {

            <h1 style="padding-left:16px">
                Flight Delete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                @TempData["FlightMessage"]
            </h1>

        }
        else
        {
            <h1 style="padding-left:16px">
                Flight Delete
            </h1>
        }






        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["TravelDbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='Flight' AND COMPID='{0}' AND USERID = '{1}'", compid, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Flight")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Flight")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Flight")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Flight")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Flight")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Flight")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "Flight")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Flight")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "Flight")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "Flight")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "Flight")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "Flight")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>
    <br />
    <div class="col-md-12">

        <div class="form-group">

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Card No", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.passenger.CARDNO, htmlAttributes: new { id = "idCardNo", @class = "form-control",autofocus=true })

                </div>
                <div class="col-md-2">
                    @Html.Label("Passenger Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.passenger.PSGRNM, htmlAttributes: new { id = "idPassenger", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Flight No", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.flight.FLIGHTNO, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { id = "idFlightno", @class = "form-control" })

                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Carrier SID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.flight.CARRIERSID, carriersid, "--Select--", htmlAttributes: new { id = "txtShortID", @class = "form-control", @readonly = "readonly" })

                </div>

                <div class="col-md-2">
                    @Html.Label("Flight Date", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.FLIGHTDT, htmlAttributes: new { id = "idFlightDt", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Return Date", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.RETURNDT, htmlAttributes: new { id = "idReturnDt", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Class", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.CLASS, htmlAttributes: new { id = "idClass", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Route", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.ROUTE, htmlAttributes: new { id = "idRoot", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Departure Time", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.TIMEDEP, htmlAttributes: new { id = "idTimeDep", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Arrival Time", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.TIMEARR, htmlAttributes: new { id = "idTimeArr", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Status", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.STATUS, htmlAttributes: new { id = "idStatus", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("PNRNO", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.PNRNO, htmlAttributes: new { id = "idPNRNO", @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-2">
                    @Html.Label("Confirmed By", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.flight.CONFIRMBY, htmlAttributes: new { id = "idConfirmBy", @class = "form-control", @readonly = "readonly" })

                </div>
            </div>
            <br />

            @Html.TextBoxFor(model => model.flight.INSLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-3">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" name="command" />
                </div>
                @*<div class="col-md-3">
                        <input type="submit" class="btn btn-primary btn-block" id="createp" value="Create & Print" name="command" formtarget="_blank" />

                    </div>*@
            </div>
        </div>
    </div>











    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $(function () {
                $("#idFlightDt").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
                $("#idReturnDt").datepicker({ dateFormat: 'dd-M-yy', changeYear: true });
            });


            $('#idCardNo').autocomplete({
                source: '@Url.Action("TagSearch", "Passenger")',
                select: function (event, ui) {
                    var changedtxt = ui.item.value;
                    var txtPassenger = document.getElementById('idPassenger');


                    $.getJSON(
                      "/Flight/CardNo_Changed", { "Changedtxt": changedtxt },
                          function (myData) {

                              txtPassenger.value = myData.passenger;
                          });


                    document.getElementById("idFlightno").focus();


                    $.ajax
                    ({
                        url: '@Url.Action("FlightNoLoad", "Flight")',
                        type: 'post',
                        dataType: "json",
                        data: { type: changedtxt },
                        success: function (data) {
                            $("#idFlightno").empty();

                            $("#idFlightno").append('<option value="'
                                + '">'
                                + "--Select--" + '</option>');



                            $.each(data, function (i, memo) {

                                $("#idFlightno").append('<option value="'
                                    + memo.Value + '">'
                                    + memo.Text + '</option>');




                            });

                        }
                    });
                },
                change: $('#idCardNo').keyup(_.debounce(txtOneChanged, 500))
            });

            @*$('#idCardNo').change(function () {
                var changedtxt = $('#idCardNo').val();

                var txtPassenger = document.getElementById('idPassenger');


                $.getJSON(
                  "/Flight/CardNo_Changed", { "Changedtxt": changedtxt },
                      function (myData) {

                          txtPassenger.value = myData.passenger;
                      });


                document.getElementById("idFlightno").focus();


                $.ajax
                ({
                    url: '@Url.Action("FlightNoLoad", "Flight")',
                    type: 'post',
                    dataType: "json",
                    data: { type: changedtxt },
                    success: function (data) {
                        $("#idFlightno").empty();

                        $("#idFlightno").append('<option value="'
                            + '">'
                            + "--Select--" + '</option>');



                        $.each(data, function (i, memo) {

                            $("#idFlightno").append('<option value="'
                                + memo.Value + '">'
                                + memo.Text + '</option>');




                        });

                    }
                });

            });*@

            $('#idFlightno').change(function () {


                var changedtxt = $('#idCardNo').val();
                var changedtxt2 = $('#idFlightno').val();


                var txtprimarykey = document.getElementById('Hiddenprimaryid');


                var txtCarriersid = document.getElementById('txtShortID');

                var txtTimeDep = document.getElementById('idTimeDep');
                var txtTimeArr = document.getElementById('idTimeArr');

                var txtClass = document.getElementById('idClass');
                var txtRoot = document.getElementById('idRoot');

                var txtFlightDt = document.getElementById('idFlightDt');
                var txtReturnDt = document.getElementById('idReturnDt');

                var txtStatus = document.getElementById('idStatus');
                var txtPNRNO = document.getElementById('idPNRNO');
                var txtConfirmBy = document.getElementById('idConfirmBy');


                $.getJSON(
                    "/Flight/Update_SelectFlightno", { "Changedtxt": changedtxt, "Changedtxt2": changedtxt2 },
                    function (myData) {
                        txtprimarykey.value = myData.keyid;

                        txtCarriersid.value = myData.Carriersid;
                        txtTimeDep.value = myData.TimeDep;
                        txtTimeArr.value = myData.TimeArr;
                        txtClass.value = myData.Class;


                        txtRoot.value = myData.Root;
                        txtFlightDt.value = myData.FlightDt;
                        txtReturnDt.value = myData.ReturnDt;
                        txtStatus.value = myData.Status;

                        txtPNRNO.value = myData.PNRPO;
                        txtConfirmBy.value = myData.ConfirmBy;


                    });
            });
        });

        function txtOneChanged() {

            var changedText = $("#idCardNo").val();


            var txtBox = document.getElementById('idCardNo');


            if (changedText != "") {
                $.getJSON(
                    '/Passenger/keyword', { "ChangedText": changedText },
                    function (result) {
                        txtBox.value = result.Cardno;


                        document.getElementById("idCardNo").focus();

                    });
            }
        }
    </script>



}
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
<script src="~/Scripts/Underscore.js"></script>